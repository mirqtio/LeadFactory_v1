{
  "timestamp": "2025-06-11T21:30:50.595262",
  "summary": {
    "total": 9,
    "passed": 6,
    "failed": 3
  },
  "results": [
    {
      "service": "API Health",
      "url": "http://localhost:8000/health",
      "status_code": 200,
      "success": true,
      "response": {
        "status": "healthy",
        "version": "0.1.0",
        "environment": "production"
      }
    },
    {
      "service": "API Docs",
      "url": "http://localhost:8000/docs",
      "status_code": 404,
      "success": false
    },
    {
      "service": "API OpenAPI",
      "url": "http://localhost:8000/openapi.json",
      "status_code": 200,
      "success": true,
      "response": {
        "openapi": "3.1.0",
        "info": {
          "title": "LeadFactory",
          "version": "0.1.0"
        },
        "paths": {
          "/health": {
            "get": {
              "summary": "Health Check",
              "description": "Health check endpoint for monitoring",
              "operationId": "health_check_health_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/universes": {
            "post": {
              "tags": [
                "targeting"
              ],
              "summary": "Create Target Universe",
              "description": "Create a new target universe with specified targeting criteria.\n\nAcceptance Criteria:\n- FastAPI routes work\n- Validation complete\n- Error handling proper\n- Documentation generated",
              "operationId": "create_target_universe_api_v1_targeting_universes_post",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/CreateTargetUniverseSchema"
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TargetUniverseResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "List Target Universes",
              "description": "List target universes with optional filtering and pagination.",
              "operationId": "list_target_universes_api_v1_targeting_universes_get",
              "parameters": [
                {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Page number",
                    "default": 1,
                    "title": "Page"
                  },
                  "description": "Page number"
                },
                {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1,
                    "description": "Items per page",
                    "default": 20,
                    "title": "Size"
                  },
                  "description": "Items per page"
                },
                {
                  "name": "name_contains",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Filter by name containing text",
                    "title": "Name Contains"
                  },
                  "description": "Filter by name containing text"
                },
                {
                  "name": "verticals",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/VerticalMarket"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Filter by verticals",
                    "title": "Verticals"
                  },
                  "description": "Filter by verticals"
                },
                {
                  "name": "is_active",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Filter by active status",
                    "title": "Is Active"
                  },
                  "description": "Filter by active status"
                },
                {
                  "name": "min_size",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "minimum": 0
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Minimum universe size",
                    "title": "Min Size"
                  },
                  "description": "Minimum universe size"
                },
                {
                  "name": "max_size",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "minimum": 0
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Maximum universe size",
                    "title": "Max Size"
                  },
                  "description": "Maximum universe size"
                },
                {
                  "name": "created_after",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Created after date",
                    "title": "Created After"
                  },
                  "description": "Created after date"
                },
                {
                  "name": "created_before",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Created before date",
                    "title": "Created Before"
                  },
                  "description": "Created before date"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/TargetUniverseResponseSchema"
                        },
                        "title": "Response List Target Universes Api V1 Targeting Universes Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/universes/{universe_id}": {
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "Get Target Universe",
              "description": "Get a specific target universe by ID.",
              "operationId": "get_target_universe_api_v1_targeting_universes__universe_id__get",
              "parameters": [
                {
                  "name": "universe_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Universe Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TargetUniverseResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "targeting"
              ],
              "summary": "Update Target Universe",
              "description": "Update a target universe.",
              "operationId": "update_target_universe_api_v1_targeting_universes__universe_id__put",
              "parameters": [
                {
                  "name": "universe_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Universe Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/UpdateTargetUniverseSchema"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TargetUniverseResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "delete": {
              "tags": [
                "targeting"
              ],
              "summary": "Delete Target Universe",
              "description": "Delete (soft delete) a target universe.",
              "operationId": "delete_target_universe_api_v1_targeting_universes__universe_id__delete",
              "parameters": [
                {
                  "name": "universe_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Universe Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BaseResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/universes/{universe_id}/refresh": {
            "post": {
              "tags": [
                "targeting"
              ],
              "summary": "Refresh Target Universe",
              "description": "Refresh target universe data (background task).",
              "operationId": "refresh_target_universe_api_v1_targeting_universes__universe_id__refresh_post",
              "parameters": [
                {
                  "name": "universe_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Universe Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/RefreshUniverseSchema"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BaseResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/campaigns": {
            "post": {
              "tags": [
                "targeting"
              ],
              "summary": "Create Campaign",
              "description": "Create a new campaign.",
              "operationId": "create_campaign_api_v1_targeting_campaigns_post",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/CreateCampaignSchema"
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CampaignResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "List Campaigns",
              "description": "List campaigns with optional filtering and pagination.",
              "operationId": "list_campaigns_api_v1_targeting_campaigns_get",
              "parameters": [
                {
                  "name": "name_contains",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Name Contains"
                  }
                },
                {
                  "name": "campaign_type",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Campaign Type"
                  }
                },
                {
                  "name": "target_universe_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Target Universe Id"
                  }
                },
                {
                  "name": "created_after",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Created After"
                  }
                },
                {
                  "name": "created_before",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Created Before"
                  }
                },
                {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 1,
                    "title": "Page"
                  }
                },
                {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 20,
                    "title": "Size"
                  }
                }
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CampaignStatus"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "title": "Status"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CampaignResponseSchema"
                        },
                        "title": "Response List Campaigns Api V1 Targeting Campaigns Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/campaigns/{campaign_id}": {
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "Get Campaign",
              "description": "Get a specific campaign by ID.",
              "operationId": "get_campaign_api_v1_targeting_campaigns__campaign_id__get",
              "parameters": [
                {
                  "name": "campaign_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Campaign Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CampaignResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "targeting"
              ],
              "summary": "Update Campaign",
              "description": "Update a campaign.",
              "operationId": "update_campaign_api_v1_targeting_campaigns__campaign_id__put",
              "parameters": [
                {
                  "name": "campaign_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Campaign Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/UpdateCampaignSchema"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CampaignResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/batches": {
            "post": {
              "tags": [
                "targeting"
              ],
              "summary": "Create Batches",
              "description": "Create daily batches for campaigns.\n\nAcceptance Criteria:\n- Daily batch creation works\n- No duplicate batches",
              "operationId": "create_batches_api_v1_targeting_batches_post",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/CreateBatchesSchema"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "title": "Response Create Batches Api V1 Targeting Batches Post"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "List Batches",
              "description": "List campaign batches with optional filtering and pagination.",
              "operationId": "list_batches_api_v1_targeting_batches_get",
              "parameters": [
                {
                  "name": "campaign_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Campaign Id"
                  }
                },
                {
                  "name": "scheduled_after",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Scheduled After"
                  }
                },
                {
                  "name": "scheduled_before",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date-time"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Scheduled Before"
                  }
                },
                {
                  "name": "has_errors",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Has Errors"
                  }
                },
                {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 1,
                    "title": "Page"
                  }
                },
                {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 20,
                    "title": "Size"
                  }
                }
              ],
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "anyOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/BatchProcessingStatus"
                          }
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "title": "Status"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/BatchResponseSchema"
                        },
                        "title": "Response List Batches Api V1 Targeting Batches Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/batches/pending": {
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "Get Pending Batches",
              "description": "Get batches ready for processing.",
              "operationId": "get_pending_batches_api_v1_targeting_batches_pending_get",
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "maximum": 100,
                        "minimum": 1
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Limit"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/BatchResponseSchema"
                        },
                        "title": "Response Get Pending Batches Api V1 Targeting Batches Pending Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/batches/{batch_id}/status": {
            "put": {
              "tags": [
                "targeting"
              ],
              "summary": "Update Batch Status",
              "description": "Update batch processing status.",
              "operationId": "update_batch_status_api_v1_targeting_batches__batch_id__status_put",
              "parameters": [
                {
                  "name": "batch_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Batch Id"
                  }
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BatchStatusUpdateSchema"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BaseResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/analytics/quota": {
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "Get Quota Allocation",
              "description": "Get current quota allocation and usage.\n\nAcceptance Criteria:\n- Quota allocation fair",
              "operationId": "get_quota_allocation_api_v1_targeting_analytics_quota_get",
              "parameters": [
                {
                  "name": "target_date",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "format": "date"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Target Date"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/QuotaAllocationResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/analytics/priorities": {
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "Get Universe Priorities",
              "description": "Get target universe priorities for scheduling.\n\nAcceptance Criteria:\n- Priority-based scheduling",
              "operationId": "get_universe_priorities_api_v1_targeting_analytics_priorities_get",
              "parameters": [
                {
                  "name": "limit",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "maximum": 50,
                        "minimum": 1
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "default": 10,
                    "title": "Limit"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/UniversePriorityResponseSchema"
                        },
                        "title": "Response Get Universe Priorities Api V1 Targeting Analytics Priorities Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/geographic-boundaries": {
            "post": {
              "tags": [
                "targeting"
              ],
              "summary": "Create Geographic Boundary",
              "description": "Create a new geographic boundary.",
              "operationId": "create_geographic_boundary_api_v1_targeting_geographic_boundaries_post",
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/CreateGeographicBoundarySchema"
                    }
                  }
                }
              },
              "responses": {
                "201": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/GeographicBoundaryResponseSchema"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "List Geographic Boundaries",
              "description": "List geographic boundaries with optional filtering.",
              "operationId": "list_geographic_boundaries_api_v1_targeting_geographic_boundaries_get",
              "parameters": [
                {
                  "name": "level",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Filter by geography level",
                    "title": "Level"
                  },
                  "description": "Filter by geography level"
                },
                {
                  "name": "country",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "Filter by country",
                    "default": "US",
                    "title": "Country"
                  },
                  "description": "Filter by country"
                },
                {
                  "name": "page",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 1,
                    "title": "Page"
                  }
                },
                {
                  "name": "size",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "integer",
                    "default": 20,
                    "title": "Size"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/GeographicBoundaryResponseSchema"
                        },
                        "title": "Response List Geographic Boundaries Api V1 Targeting Geographic Boundaries Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/targeting/health": {
            "get": {
              "tags": [
                "targeting"
              ],
              "summary": "Targeting Health Check",
              "description": "Health check for targeting domain.",
              "operationId": "targeting_health_check_api_v1_targeting_health_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "title": "Response Targeting Health Check Api V1 Targeting Health Get"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/assessments/trigger": {
            "post": {
              "tags": [
                "assessments"
              ],
              "summary": "Trigger Website Assessment",
              "description": "Start a comprehensive website assessment including PageSpeed, tech stack, and AI insights",
              "operationId": "trigger_assessment_api_v1_assessments_trigger_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/TriggerAssessmentRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/TriggerAssessmentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/assessments/{session_id}/status": {
            "get": {
              "tags": [
                "assessments"
              ],
              "summary": "Check Assessment Status",
              "description": "Get the current status and progress of a running assessment",
              "operationId": "get_assessment_status_api_v1_assessments__session_id__status_get",
              "parameters": [
                {
                  "name": "session_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Session Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AssessmentStatusResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/assessments/{session_id}/results": {
            "get": {
              "tags": [
                "assessments"
              ],
              "summary": "Get Assessment Results",
              "description": "Retrieve the complete results of a finished assessment",
              "operationId": "get_assessment_results_api_v1_assessments__session_id__results_get",
              "parameters": [
                {
                  "name": "session_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Session Id"
                  }
                },
                {
                  "name": "include_raw_data",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "type": "boolean",
                    "description": "Include raw assessment data",
                    "default": false,
                    "title": "Include Raw Data"
                  },
                  "description": "Include raw assessment data"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/AssessmentResults"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/assessments/batch": {
            "post": {
              "tags": [
                "assessments"
              ],
              "summary": "Trigger Batch Assessments",
              "description": "Start multiple website assessments in parallel",
              "operationId": "trigger_batch_assessment_api_v1_assessments_batch_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BatchAssessmentRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/BatchAssessmentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/assessments/{session_id}": {
            "delete": {
              "tags": [
                "assessments"
              ],
              "summary": "Cancel Assessment",
              "description": "Cancel a running assessment",
              "operationId": "cancel_assessment_api_v1_assessments__session_id__delete",
              "parameters": [
                {
                  "name": "session_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Session Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/assessments/health": {
            "get": {
              "tags": [
                "assessments"
              ],
              "summary": "Health Check",
              "description": "Check the health status of the assessment service",
              "operationId": "health_check_api_v1_assessments_health_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/d3_assessment__schemas__HealthCheckResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/checkout/initiate": {
            "post": {
              "tags": [
                "checkout"
              ],
              "summary": "Initiate checkout process",
              "description": "Start a new checkout session with Stripe - Acceptance Criteria: Checkout initiation API",
              "operationId": "initiate_checkout_api_v1_checkout_initiate_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/CheckoutInitiationRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CheckoutInitiationResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/checkout/webhook": {
            "post": {
              "tags": [
                "checkout"
              ],
              "summary": "Stripe webhook endpoint",
              "description": "Secure webhook endpoint for processing Stripe events - Acceptance Criteria: Webhook endpoint secure",
              "operationId": "stripe_webhook_api_v1_checkout_webhook_post",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/WebhookEventResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/checkout/session/{session_id}/status": {
            "get": {
              "tags": [
                "checkout"
              ],
              "summary": "Get checkout session status",
              "description": "Retrieve the current status of a checkout session",
              "operationId": "get_session_status_api_v1_checkout_session__session_id__status_get",
              "parameters": [
                {
                  "name": "session_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Session Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CheckoutSessionStatusResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/checkout/success": {
            "get": {
              "tags": [
                "checkout"
              ],
              "summary": "Payment success page",
              "description": "Handle successful payment completion - Acceptance Criteria: Success page works",
              "operationId": "payment_success_api_v1_checkout_success_get",
              "parameters": [
                {
                  "name": "session_id",
                  "in": "query",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Session Id"
                  }
                },
                {
                  "name": "purchase_id",
                  "in": "query",
                  "required": false,
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "title": "Purchase Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SuccessPageResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/checkout/audit-report": {
            "post": {
              "tags": [
                "checkout"
              ],
              "summary": "Create audit report checkout",
              "description": "Convenience endpoint for single audit report checkout",
              "operationId": "create_audit_report_checkout_api_v1_checkout_audit_report_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/AuditReportCheckoutRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CheckoutInitiationResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/checkout/bulk-reports": {
            "post": {
              "tags": [
                "checkout"
              ],
              "summary": "Create bulk reports checkout",
              "description": "Convenience endpoint for bulk audit reports checkout",
              "operationId": "create_bulk_reports_checkout_api_v1_checkout_bulk_reports_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/BulkReportsCheckoutRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CheckoutInitiationResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/checkout/status": {
            "get": {
              "tags": [
                "checkout"
              ],
              "summary": "API health status",
              "description": "Get API and service health status",
              "operationId": "get_api_status_api_v1_checkout_status_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/APIStatusResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/metrics": {
            "post": {
              "tags": [
                "analytics"
              ],
              "summary": "Get Analytics Metrics",
              "description": "Retrieve analytics metrics with date range and segment filtering",
              "operationId": "get_metrics_api_v1_analytics_metrics_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/MetricsRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/MetricsResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/funnel": {
            "post": {
              "tags": [
                "analytics"
              ],
              "summary": "Get Funnel Metrics",
              "description": "Retrieve funnel analysis metrics with conversion paths and drop-off analysis",
              "operationId": "get_funnel_metrics_api_v1_analytics_funnel_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/FunnelMetricsRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/FunnelMetricsResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/cohort": {
            "post": {
              "tags": [
                "analytics"
              ],
              "summary": "Get Cohort Analysis",
              "description": "Retrieve cohort retention analysis with specified retention periods",
              "operationId": "get_cohort_analysis_api_v1_analytics_cohort_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/CohortAnalysisRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/CohortAnalysisResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/export": {
            "post": {
              "tags": [
                "analytics"
              ],
              "summary": "Export Analytics Data",
              "description": "Export analytics data to CSV, JSON, or Excel format",
              "operationId": "export_analytics_data_api_v1_analytics_export_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ExportRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ExportResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/export/{export_id}": {
            "get": {
              "tags": [
                "analytics"
              ],
              "summary": "Get Export Status",
              "description": "Check the status of an export or download the file",
              "operationId": "get_export_status_api_v1_analytics_export__export_id__get",
              "parameters": [
                {
                  "name": "export_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "title": "Export Id"
                  }
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {}
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/v1/analytics/health": {
            "get": {
              "tags": [
                "analytics"
              ],
              "summary": "Health Check",
              "description": "Check the health status of the analytics service",
              "operationId": "health_check_api_v1_analytics_health_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/d10_analytics__schemas__HealthCheckResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/health": {
            "get": {
              "tags": [
                "orchestration"
              ],
              "summary": "Health Check",
              "description": "Health check endpoint for orchestration service",
              "operationId": "health_check_orchestration_health_get",
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HealthResponse"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/pipelines/trigger": {
            "post": {
              "tags": [
                "orchestration"
              ],
              "summary": "Trigger Pipeline",
              "description": "Trigger a new pipeline run\n\nAcceptance Criteria: Pipeline trigger API",
              "operationId": "trigger_pipeline_orchestration_pipelines_trigger_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PipelineTriggerRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PipelineRunResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/pipelines/{run_id}/status": {
            "get": {
              "tags": [
                "orchestration"
              ],
              "summary": "Get Pipeline Status",
              "description": "Get pipeline run status\n\nAcceptance Criteria: Status checking works",
              "operationId": "get_pipeline_status_orchestration_pipelines__run_id__status_get",
              "parameters": [
                {
                  "name": "run_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Pipeline run ID",
                    "title": "Run Id"
                  },
                  "description": "Pipeline run ID"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PipelineStatusResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/pipelines/{run_id}": {
            "get": {
              "tags": [
                "orchestration"
              ],
              "summary": "Get Pipeline Run",
              "description": "Get detailed pipeline run information",
              "operationId": "get_pipeline_run_orchestration_pipelines__run_id__get",
              "parameters": [
                {
                  "name": "run_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Pipeline run ID",
                    "title": "Run Id"
                  },
                  "description": "Pipeline run ID"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PipelineRunResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/pipelines/history": {
            "post": {
              "tags": [
                "orchestration"
              ],
              "summary": "Get Pipeline History",
              "description": "Get pipeline run history with filtering and pagination\n\nAcceptance Criteria: Run history API",
              "operationId": "get_pipeline_history_orchestration_pipelines_history_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/PipelineRunHistoryRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PipelineRunHistoryResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/experiments": {
            "post": {
              "tags": [
                "orchestration"
              ],
              "summary": "Create Experiment",
              "description": "Create a new experiment\n\nAcceptance Criteria: Experiment management",
              "operationId": "create_experiment_orchestration_experiments_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ExperimentCreateRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ExperimentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/experiments/{experiment_id}": {
            "get": {
              "tags": [
                "orchestration"
              ],
              "summary": "Get Experiment",
              "description": "Get experiment details",
              "operationId": "get_experiment_orchestration_experiments__experiment_id__get",
              "parameters": [
                {
                  "name": "experiment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Experiment ID",
                    "title": "Experiment Id"
                  },
                  "description": "Experiment ID"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ExperimentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "put": {
              "tags": [
                "orchestration"
              ],
              "summary": "Update Experiment",
              "description": "Update an experiment",
              "operationId": "update_experiment_orchestration_experiments__experiment_id__put",
              "parameters": [
                {
                  "name": "experiment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Experiment ID",
                    "title": "Experiment Id"
                  },
                  "description": "Experiment ID"
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ExperimentUpdateRequest"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ExperimentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "delete": {
              "tags": [
                "orchestration"
              ],
              "summary": "Delete Experiment",
              "description": "Delete an experiment",
              "operationId": "delete_experiment_orchestration_experiments__experiment_id__delete",
              "parameters": [
                {
                  "name": "experiment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Experiment ID",
                    "title": "Experiment Id"
                  },
                  "description": "Experiment ID"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/SuccessResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/experiments/list": {
            "post": {
              "tags": [
                "orchestration"
              ],
              "summary": "List Experiments",
              "description": "List experiments with filtering and pagination",
              "operationId": "list_experiments_orchestration_experiments_list_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ExperimentListRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ExperimentListResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/experiments/{experiment_id}/variants": {
            "post": {
              "tags": [
                "orchestration"
              ],
              "summary": "Create Experiment Variant",
              "description": "Create a new experiment variant",
              "operationId": "create_experiment_variant_orchestration_experiments__experiment_id__variants_post",
              "parameters": [
                {
                  "name": "experiment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Experiment ID",
                    "title": "Experiment Id"
                  },
                  "description": "Experiment ID"
                }
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ExperimentVariantCreateRequest"
                    }
                  }
                }
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/ExperimentVariantResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            },
            "get": {
              "tags": [
                "orchestration"
              ],
              "summary": "Get Experiment Variants",
              "description": "Get all variants for an experiment",
              "operationId": "get_experiment_variants_orchestration_experiments__experiment_id__variants_get",
              "parameters": [
                {
                  "name": "experiment_id",
                  "in": "path",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "description": "Experiment ID",
                    "title": "Experiment Id"
                  },
                  "description": "Experiment ID"
                }
              ],
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ExperimentVariantResponse"
                        },
                        "title": "Response Get Experiment Variants Orchestration Experiments  Experiment Id  Variants Get"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          },
          "/orchestration/experiments/assign": {
            "post": {
              "tags": [
                "orchestration"
              ],
              "summary": "Assign Variant",
              "description": "Assign a user to an experiment variant",
              "operationId": "assign_variant_orchestration_experiments_assign_post",
              "requestBody": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/VariantAssignmentRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Successful Response",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/VariantAssignmentResponse"
                      }
                    }
                  }
                },
                "422": {
                  "description": "Validation Error",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HTTPValidationError"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "components": {
          "schemas": {
            "AIInsightsResult": {
              "properties": {
                "recommendations": {
                  "items": {
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Recommendations",
                  "description": "List of recommendations"
                },
                "industry_insights": {
                  "type": "object",
                  "title": "Industry Insights",
                  "description": "Industry-specific insights"
                },
                "summary": {
                  "type": "object",
                  "title": "Summary",
                  "description": "Overall assessment summary"
                },
                "ai_model_version": {
                  "type": "string",
                  "title": "Ai Model Version",
                  "description": "AI model version used"
                },
                "processing_cost_usd": {
                  "type": "string",
                  "title": "Processing Cost Usd",
                  "description": "Cost of AI processing"
                }
              },
              "type": "object",
              "required": [
                "recommendations",
                "industry_insights",
                "summary",
                "ai_model_version",
                "processing_cost_usd"
              ],
              "title": "AIInsightsResult",
              "description": "AI-generated insights result"
            },
            "APIStatusResponse": {
              "properties": {
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "API status"
                },
                "version": {
                  "type": "string",
                  "title": "Version",
                  "description": "API version"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp",
                  "description": "Current timestamp"
                },
                "services": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Services",
                  "description": "Service status"
                }
              },
              "type": "object",
              "required": [
                "status",
                "version",
                "services"
              ],
              "title": "APIStatusResponse",
              "description": "Schema for API status/health check response",
              "example": {
                "services": {
                  "database": "connected",
                  "stripe": "connected",
                  "webhook_processor": "active"
                },
                "status": "healthy",
                "timestamp": "2023-12-01T12:00:00Z",
                "version": "1.0.0"
              }
            },
            "AssessmentResults": {
              "properties": {
                "session_id": {
                  "type": "string",
                  "title": "Session Id",
                  "description": "Session identifier"
                },
                "business_id": {
                  "type": "string",
                  "title": "Business Id",
                  "description": "Business identifier"
                },
                "url": {
                  "type": "string",
                  "title": "Url",
                  "description": "Assessed website URL"
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "Domain name"
                },
                "industry": {
                  "type": "string",
                  "title": "Industry",
                  "description": "Industry category"
                },
                "status": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AssessmentStatus"
                    }
                  ],
                  "description": "Final assessment status"
                },
                "total_assessments": {
                  "type": "integer",
                  "title": "Total Assessments",
                  "description": "Total assessments requested"
                },
                "completed_assessments": {
                  "type": "integer",
                  "title": "Completed Assessments",
                  "description": "Successfully completed assessments"
                },
                "failed_assessments": {
                  "type": "integer",
                  "title": "Failed Assessments",
                  "description": "Failed assessments"
                },
                "pagespeed_results": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PageSpeedMetrics"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "PageSpeed assessment results"
                },
                "tech_stack_results": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/TechStackResult"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Tech Stack Results",
                  "description": "Technology stack detection results"
                },
                "ai_insights_results": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AIInsightsResult"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "AI-generated insights and recommendations"
                },
                "started_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Started At",
                  "description": "Assessment start time"
                },
                "completed_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Completed At",
                  "description": "Assessment completion time"
                },
                "execution_time_ms": {
                  "type": "integer",
                  "title": "Execution Time Ms",
                  "description": "Total execution time in milliseconds"
                },
                "total_cost_usd": {
                  "type": "string",
                  "title": "Total Cost Usd",
                  "description": "Total cost of assessment"
                },
                "errors": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Errors",
                  "description": "Errors by assessment type"
                }
              },
              "type": "object",
              "required": [
                "session_id",
                "business_id",
                "url",
                "domain",
                "industry",
                "status",
                "total_assessments",
                "completed_assessments",
                "failed_assessments",
                "started_at",
                "completed_at",
                "execution_time_ms",
                "total_cost_usd"
              ],
              "title": "AssessmentResults",
              "description": "Complete assessment results",
              "example": {
                "ai_insights_results": {
                  "industry_insights": {
                    "competitive_advantage": "Fast loading improves conversion",
                    "industry": "ecommerce"
                  },
                  "model_version": "gpt-4-0125-preview",
                  "processing_cost_usd": "0.35",
                  "recommendations": [
                    {
                      "impact": "Reduce LCP by 30%",
                      "priority": "High",
                      "title": "Optimize Image Loading"
                    }
                  ],
                  "summary": {
                    "overall_health": "Good performance with improvement opportunities"
                  }
                },
                "business_id": "biz_123456789",
                "completed_assessments": 3,
                "completed_at": "2025-06-09T02:47:30Z",
                "domain": "example-store.com",
                "execution_time_ms": 150000,
                "failed_assessments": 0,
                "industry": "ecommerce",
                "pagespeed_results": {
                  "accessibility_score": 78,
                  "cumulative_layout_shift": 0.08,
                  "first_input_delay": 120,
                  "largest_contentful_paint": 2500,
                  "performance_score": 85,
                  "seo_score": 92
                },
                "session_id": "sess_abcdef123456",
                "started_at": "2025-06-09T02:45:00Z",
                "status": "completed",
                "tech_stack_results": [
                  {
                    "category": "cms",
                    "confidence": 0.95,
                    "technology_name": "WordPress",
                    "version": "6.0"
                  }
                ],
                "total_assessments": 3,
                "total_cost_usd": "0.50",
                "url": "https://example-store.com"
              }
            },
            "AssessmentStatus": {
              "type": "string",
              "enum": [
                "pending",
                "running",
                "completed",
                "failed",
                "cancelled",
                "partial"
              ],
              "title": "AssessmentStatus",
              "description": "Status of an assessment"
            },
            "AssessmentStatusResponse": {
              "properties": {
                "session_id": {
                  "type": "string",
                  "title": "Session Id",
                  "description": "Session identifier"
                },
                "business_id": {
                  "type": "string",
                  "title": "Business Id",
                  "description": "Business identifier"
                },
                "status": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AssessmentStatus"
                    }
                  ],
                  "description": "Current assessment status"
                },
                "progress": {
                  "type": "string",
                  "title": "Progress",
                  "description": "Progress description (e.g., '2/3 complete')"
                },
                "total_assessments": {
                  "type": "integer",
                  "title": "Total Assessments",
                  "description": "Total number of assessments"
                },
                "completed_assessments": {
                  "type": "integer",
                  "title": "Completed Assessments",
                  "description": "Number of completed assessments"
                },
                "failed_assessments": {
                  "type": "integer",
                  "title": "Failed Assessments",
                  "description": "Number of failed assessments"
                },
                "started_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Started At",
                  "description": "Assessment start time"
                },
                "estimated_completion": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Estimated Completion",
                  "description": "Estimated completion time"
                },
                "completed_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Completed At",
                  "description": "Actual completion time"
                },
                "current_step": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Current Step",
                  "description": "Description of current processing step"
                },
                "errors": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Errors",
                  "description": "List of error messages if any assessments failed"
                }
              },
              "type": "object",
              "required": [
                "session_id",
                "business_id",
                "status",
                "progress",
                "total_assessments",
                "completed_assessments",
                "failed_assessments",
                "started_at"
              ],
              "title": "AssessmentStatusResponse",
              "description": "Response model for assessment status checking",
              "example": {
                "business_id": "biz_123456789",
                "completed_assessments": 2,
                "current_step": "Running AI insights analysis",
                "estimated_completion": "2025-06-09T03:00:00Z",
                "failed_assessments": 0,
                "progress": "2/3 complete",
                "session_id": "sess_abcdef123456",
                "started_at": "2025-06-09T02:45:00Z",
                "status": "running",
                "total_assessments": 3
              }
            },
            "AssessmentType": {
              "type": "string",
              "enum": [
                "pagespeed",
                "tech_stack",
                "ai_insights",
                "full_audit",
                "quick_scan",
                "custom"
              ],
              "title": "AssessmentType",
              "description": "Type of assessment being performed"
            },
            "AuditReportCheckoutRequest": {
              "properties": {
                "customer_email": {
                  "type": "string",
                  "format": "email",
                  "title": "Customer Email",
                  "description": "Customer email address"
                },
                "business_url": {
                  "type": "string",
                  "title": "Business Url",
                  "description": "Business website URL to audit"
                },
                "business_name": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 200
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Business Name",
                  "description": "Business name"
                },
                "amount_usd": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Amount Usd",
                  "description": "Custom amount",
                  "default": "29.99"
                },
                "attribution_data": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Attribution Data",
                  "description": "Attribution data"
                }
              },
              "type": "object",
              "required": [
                "customer_email",
                "business_url"
              ],
              "title": "AuditReportCheckoutRequest",
              "description": "Schema for audit report checkout convenience endpoint",
              "example": {
                "amount_usd": 29.99,
                "attribution_data": {
                  "utm_campaign": "audit_reports",
                  "utm_source": "google"
                },
                "business_name": "Example Business",
                "business_url": "https://example.com",
                "customer_email": "customer@example.com"
              }
            },
            "BaseResponseSchema": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "default": true
                },
                "message": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Message"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp"
                }
              },
              "type": "object",
              "title": "BaseResponseSchema",
              "description": "Base response schema with common fields"
            },
            "BatchAssessmentRequest": {
              "properties": {
                "assessments": {
                  "items": {
                    "$ref": "#/components/schemas/TriggerAssessmentRequest"
                  },
                  "type": "array",
                  "maxItems": 50,
                  "minItems": 1,
                  "title": "Assessments",
                  "description": "List of assessments to process"
                },
                "max_concurrent": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "maximum": 10.0,
                      "minimum": 1.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Max Concurrent",
                  "description": "Maximum concurrent assessments",
                  "default": 3
                },
                "batch_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Batch Id",
                  "description": "Optional batch identifier for tracking"
                }
              },
              "type": "object",
              "required": [
                "assessments"
              ],
              "title": "BatchAssessmentRequest",
              "description": "Request model for batch assessment processing",
              "example": {
                "assessments": [
                  {
                    "business_id": "biz_123",
                    "industry": "ecommerce",
                    "url": "https://site1.com"
                  },
                  {
                    "business_id": "biz_456",
                    "industry": "healthcare",
                    "url": "https://site2.com"
                  }
                ],
                "batch_id": "batch_202506091234",
                "max_concurrent": 3
              }
            },
            "BatchAssessmentResponse": {
              "properties": {
                "batch_id": {
                  "type": "string",
                  "title": "Batch Id",
                  "description": "Batch identifier"
                },
                "total_assessments": {
                  "type": "integer",
                  "title": "Total Assessments",
                  "description": "Total assessments in batch"
                },
                "session_ids": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Session Ids",
                  "description": "List of session IDs"
                },
                "estimated_completion_time": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Estimated Completion Time",
                  "description": "Estimated time for batch completion"
                },
                "tracking_url": {
                  "type": "string",
                  "title": "Tracking Url",
                  "description": "URL to check batch status"
                }
              },
              "type": "object",
              "required": [
                "batch_id",
                "total_assessments",
                "session_ids",
                "tracking_url"
              ],
              "title": "BatchAssessmentResponse",
              "description": "Response model for batch assessment trigger",
              "example": {
                "batch_id": "batch_202506091234",
                "estimated_completion_time": "2025-06-09T03:10:00Z",
                "session_ids": [
                  "sess_abc123",
                  "sess_def456"
                ],
                "total_assessments": 2,
                "tracking_url": "/api/v1/assessments/batch/batch_202506091234/status"
              }
            },
            "BatchProcessingStatus": {
              "type": "string",
              "enum": [
                "pending",
                "processing",
                "completed",
                "failed",
                "retrying"
              ],
              "title": "BatchProcessingStatus",
              "description": "Status of batch processing"
            },
            "BatchResponseSchema": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign Id"
                },
                "batch_number": {
                  "type": "integer",
                  "title": "Batch Number"
                },
                "batch_size": {
                  "type": "integer",
                  "title": "Batch Size"
                },
                "status": {
                  "type": "string",
                  "title": "Status"
                },
                "scheduled_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled At"
                },
                "started_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Started At"
                },
                "completed_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Completed At"
                },
                "targets_processed": {
                  "type": "integer",
                  "title": "Targets Processed"
                },
                "targets_contacted": {
                  "type": "integer",
                  "title": "Targets Contacted"
                },
                "targets_failed": {
                  "type": "integer",
                  "title": "Targets Failed"
                },
                "error_message": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error Message"
                },
                "retry_count": {
                  "type": "integer",
                  "title": "Retry Count"
                },
                "batch_cost": {
                  "type": "number",
                  "title": "Batch Cost"
                }
              },
              "type": "object",
              "required": [
                "id",
                "campaign_id",
                "batch_number",
                "batch_size",
                "status",
                "scheduled_at",
                "started_at",
                "completed_at",
                "targets_processed",
                "targets_contacted",
                "targets_failed",
                "error_message",
                "retry_count",
                "batch_cost"
              ],
              "title": "BatchResponseSchema",
              "description": "Response schema for campaign batch"
            },
            "BatchSettingsSchema": {
              "properties": {
                "batch_size": {
                  "type": "integer",
                  "maximum": 1000.0,
                  "minimum": 1.0,
                  "title": "Batch Size",
                  "description": "Targets per batch",
                  "default": 100
                },
                "max_concurrent_batches": {
                  "type": "integer",
                  "maximum": 20.0,
                  "minimum": 1.0,
                  "title": "Max Concurrent Batches",
                  "description": "Maximum concurrent batches",
                  "default": 5
                },
                "delay_between_batches_seconds": {
                  "type": "integer",
                  "minimum": 0.0,
                  "title": "Delay Between Batches Seconds",
                  "description": "Delay between batches in seconds",
                  "default": 60
                },
                "retry_failed_attempts": {
                  "type": "integer",
                  "maximum": 10.0,
                  "minimum": 0.0,
                  "title": "Retry Failed Attempts",
                  "description": "Retry attempts for failed batches",
                  "default": 3
                },
                "max_daily_targets": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 1.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Max Daily Targets",
                  "description": "Maximum targets to process per day"
                },
                "allowed_hours_start": {
                  "type": "string",
                  "format": "time",
                  "title": "Allowed Hours Start",
                  "description": "Start of allowed processing hours",
                  "default": "09:00:00"
                },
                "allowed_hours_end": {
                  "type": "string",
                  "format": "time",
                  "title": "Allowed Hours End",
                  "description": "End of allowed processing hours",
                  "default": "17:00:00"
                }
              },
              "type": "object",
              "title": "BatchSettingsSchema",
              "description": "Batch processing settings"
            },
            "BatchStatusUpdateSchema": {
              "properties": {
                "status": {
                  "$ref": "#/components/schemas/BatchProcessingStatus"
                },
                "targets_processed": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Targets Processed"
                },
                "targets_contacted": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Targets Contacted"
                },
                "targets_failed": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Targets Failed"
                },
                "error_message": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 1000
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error Message"
                }
              },
              "type": "object",
              "required": [
                "status"
              ],
              "title": "BatchStatusUpdateSchema",
              "description": "Request schema for updating batch status"
            },
            "BulkReportsCheckoutRequest": {
              "properties": {
                "customer_email": {
                  "type": "string",
                  "format": "email",
                  "title": "Customer Email",
                  "description": "Customer email address"
                },
                "business_urls": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "maxItems": 50,
                  "minItems": 2,
                  "title": "Business Urls",
                  "description": "List of business URLs"
                },
                "amount_per_report_usd": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Amount Per Report Usd",
                  "description": "Price per report",
                  "default": "24.99"
                },
                "attribution_data": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Attribution Data",
                  "description": "Attribution data"
                }
              },
              "type": "object",
              "required": [
                "customer_email",
                "business_urls"
              ],
              "title": "BulkReportsCheckoutRequest",
              "description": "Schema for bulk reports checkout convenience endpoint",
              "example": {
                "amount_per_report_usd": 24.99,
                "attribution_data": {
                  "utm_campaign": "bulk_audits",
                  "utm_source": "google"
                },
                "business_urls": [
                  "https://example1.com",
                  "https://example2.com",
                  "https://example3.com"
                ],
                "customer_email": "customer@example.com"
              }
            },
            "CampaignResponseSchema": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "target_universe_id": {
                  "type": "string",
                  "title": "Target Universe Id"
                },
                "status": {
                  "type": "string",
                  "title": "Status"
                },
                "campaign_type": {
                  "type": "string",
                  "title": "Campaign Type"
                },
                "scheduled_start": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled Start"
                },
                "scheduled_end": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled End"
                },
                "actual_start": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Actual Start"
                },
                "actual_end": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Actual End"
                },
                "total_targets": {
                  "type": "integer",
                  "title": "Total Targets"
                },
                "contacted_targets": {
                  "type": "integer",
                  "title": "Contacted Targets"
                },
                "responded_targets": {
                  "type": "integer",
                  "title": "Responded Targets"
                },
                "converted_targets": {
                  "type": "integer",
                  "title": "Converted Targets"
                },
                "excluded_targets": {
                  "type": "integer",
                  "title": "Excluded Targets"
                },
                "total_cost": {
                  "type": "number",
                  "title": "Total Cost"
                },
                "cost_per_contact": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Cost Per Contact"
                },
                "cost_per_conversion": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Cost Per Conversion"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Updated At"
                },
                "created_by": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Created By"
                }
              },
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "target_universe_id",
                "status",
                "campaign_type",
                "scheduled_start",
                "scheduled_end",
                "actual_start",
                "actual_end",
                "total_targets",
                "contacted_targets",
                "responded_targets",
                "converted_targets",
                "excluded_targets",
                "total_cost",
                "cost_per_contact",
                "cost_per_conversion",
                "created_at",
                "updated_at",
                "created_by"
              ],
              "title": "CampaignResponseSchema",
              "description": "Response schema for campaign"
            },
            "CampaignStatus": {
              "type": "string",
              "enum": [
                "draft",
                "scheduled",
                "running",
                "paused",
                "completed",
                "cancelled",
                "error"
              ],
              "title": "CampaignStatus",
              "description": "Campaign execution status"
            },
            "CheckoutInitiationRequest": {
              "properties": {
                "customer_email": {
                  "type": "string",
                  "format": "email",
                  "title": "Customer Email",
                  "description": "Customer email address"
                },
                "items": {
                  "items": {
                    "$ref": "#/components/schemas/CheckoutItemRequest"
                  },
                  "type": "array",
                  "maxItems": 50,
                  "minItems": 1,
                  "title": "Items",
                  "description": "Items to purchase"
                },
                "attribution_data": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Attribution Data",
                  "description": "Marketing attribution data"
                },
                "additional_metadata": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Additional Metadata",
                  "description": "Additional metadata"
                },
                "success_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Success Url",
                  "description": "Custom success URL"
                },
                "cancel_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Cancel Url",
                  "description": "Custom cancel URL"
                }
              },
              "type": "object",
              "required": [
                "customer_email",
                "items"
              ],
              "title": "CheckoutInitiationRequest",
              "description": "Schema for checkout initiation API request - Acceptance Criteria",
              "example": {
                "attribution_data": {
                  "utm_campaign": "website_audit",
                  "utm_medium": "cpc",
                  "utm_source": "google"
                },
                "customer_email": "customer@example.com",
                "items": [
                  {
                    "amount_usd": 29.99,
                    "description": "Comprehensive website audit",
                    "metadata": {
                      "business_url": "https://example.com"
                    },
                    "product_name": "Website Audit Report",
                    "product_type": "audit_report",
                    "quantity": 1
                  }
                ]
              }
            },
            "CheckoutInitiationResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "description": "Whether the operation was successful"
                },
                "purchase_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Purchase Id",
                  "description": "Generated purchase ID"
                },
                "checkout_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Checkout Url",
                  "description": "Stripe checkout URL"
                },
                "session_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Session Id",
                  "description": "Stripe session ID"
                },
                "amount_total_usd": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Amount Total Usd",
                  "description": "Total amount in USD"
                },
                "amount_total_cents": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Amount Total Cents",
                  "description": "Total amount in cents"
                },
                "currency": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Currency",
                  "description": "Currency code"
                },
                "expires_at": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Expires At",
                  "description": "Session expiration timestamp"
                },
                "test_mode": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Test Mode",
                  "description": "Whether in test mode"
                },
                "items": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Items",
                  "description": "Item summary"
                },
                "error": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error",
                  "description": "Error message if failed"
                },
                "error_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error Type",
                  "description": "Error type if failed"
                }
              },
              "type": "object",
              "required": [
                "success"
              ],
              "title": "CheckoutInitiationResponse",
              "description": "Schema for checkout initiation API response",
              "example": {
                "amount_total_cents": 2999,
                "amount_total_usd": 29.99,
                "checkout_url": "https://checkout.stripe.com/pay/cs_test_123",
                "currency": "usd",
                "expires_at": 1640995200,
                "items": [
                  {
                    "amount_usd": 29.99,
                    "name": "Website Audit Report",
                    "quantity": 1,
                    "type": "audit_report"
                  }
                ],
                "purchase_id": "purchase_123456",
                "session_id": "cs_test_123456",
                "success": true,
                "test_mode": true
              }
            },
            "CheckoutItemRequest": {
              "properties": {
                "product_name": {
                  "type": "string",
                  "maxLength": 200,
                  "minLength": 1,
                  "title": "Product Name",
                  "description": "Name of the product"
                },
                "amount_usd": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 10000.0,
                      "exclusiveMinimum": 0.0
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "title": "Amount Usd",
                  "description": "Price in USD"
                },
                "quantity": {
                  "type": "integer",
                  "maximum": 100.0,
                  "minimum": 1.0,
                  "title": "Quantity",
                  "description": "Quantity of items",
                  "default": 1
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 500
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description",
                  "description": "Product description"
                },
                "product_type": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProductType"
                    }
                  ],
                  "description": "Type of product",
                  "default": "audit_report"
                },
                "business_id": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 100
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Business Id",
                  "description": "Associated business ID"
                },
                "metadata": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Metadata",
                  "description": "Additional metadata"
                }
              },
              "type": "object",
              "required": [
                "product_name",
                "amount_usd"
              ],
              "title": "CheckoutItemRequest",
              "description": "Schema for checkout item in API request",
              "example": {
                "amount_usd": 29.99,
                "business_id": "biz_123",
                "description": "Comprehensive website audit",
                "metadata": {
                  "business_url": "https://example.com"
                },
                "product_name": "Website Audit Report",
                "product_type": "audit_report",
                "quantity": 1
              }
            },
            "CheckoutSessionStatusResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "description": "Whether the operation was successful"
                },
                "session_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Session Id",
                  "description": "Checkout session ID"
                },
                "payment_status": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Payment Status",
                  "description": "Payment status"
                },
                "status": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Status",
                  "description": "Session status"
                },
                "amount_total": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Amount Total",
                  "description": "Total amount in cents"
                },
                "currency": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Currency",
                  "description": "Currency code"
                },
                "customer": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Customer",
                  "description": "Stripe customer ID"
                },
                "payment_intent": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Payment Intent",
                  "description": "Payment intent ID"
                },
                "metadata": {
                  "anyOf": [
                    {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Metadata",
                  "description": "Session metadata"
                },
                "error": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error",
                  "description": "Error message if failed"
                },
                "error_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error Type",
                  "description": "Error type if failed"
                }
              },
              "type": "object",
              "required": [
                "success"
              ],
              "title": "CheckoutSessionStatusResponse",
              "description": "Schema for checkout session status response",
              "example": {
                "amount_total": 2999,
                "currency": "usd",
                "customer": "cus_test_123",
                "metadata": {
                  "purchase_id": "purchase_123456"
                },
                "payment_intent": "pi_test_123",
                "payment_status": "paid",
                "session_id": "cs_test_123",
                "status": "complete",
                "success": true
              }
            },
            "CohortAnalysisRequest": {
              "properties": {
                "cohort_start_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Cohort Start Date",
                  "description": "Start date for cohort analysis"
                },
                "cohort_end_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Cohort End Date",
                  "description": "End date for cohort analysis"
                },
                "retention_periods": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Retention Periods",
                  "description": "Retention periods to analyze",
                  "default": [
                    "Day 0",
                    "Week 1",
                    "Week 2",
                    "Week 4",
                    "Month 2"
                  ]
                },
                "segment_filter": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SegmentFilter"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Segment filters"
                }
              },
              "type": "object",
              "required": [
                "cohort_start_date",
                "cohort_end_date"
              ],
              "title": "CohortAnalysisRequest",
              "description": "Request model for cohort analysis"
            },
            "CohortAnalysisResponse": {
              "properties": {
                "request_id": {
                  "type": "string",
                  "title": "Request Id",
                  "description": "Unique request identifier"
                },
                "cohort_date_range": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DateRangeFilter"
                    }
                  ],
                  "description": "Cohort date range"
                },
                "total_cohorts": {
                  "type": "integer",
                  "title": "Total Cohorts",
                  "description": "Total number of cohorts"
                },
                "avg_retention_rate": {
                  "type": "string",
                  "title": "Avg Retention Rate",
                  "description": "Average retention rate"
                },
                "data": {
                  "items": {
                    "$ref": "#/components/schemas/CohortDataPoint"
                  },
                  "type": "array",
                  "title": "Data",
                  "description": "Cohort data points"
                },
                "retention_summary": {
                  "type": "object",
                  "title": "Retention Summary",
                  "description": "Retention summary by period"
                },
                "generated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Generated At",
                  "description": "Response generation timestamp"
                }
              },
              "type": "object",
              "required": [
                "request_id",
                "cohort_date_range",
                "total_cohorts",
                "avg_retention_rate",
                "data",
                "retention_summary",
                "generated_at"
              ],
              "title": "CohortAnalysisResponse",
              "description": "Response model for cohort analysis"
            },
            "CohortDataPoint": {
              "properties": {
                "cohort_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Cohort Date",
                  "description": "Cohort date"
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign Id",
                  "description": "Campaign identifier"
                },
                "retention_period": {
                  "type": "string",
                  "title": "Retention Period",
                  "description": "Retention period"
                },
                "cohort_size": {
                  "type": "integer",
                  "title": "Cohort Size",
                  "description": "Initial cohort size"
                },
                "active_users": {
                  "type": "integer",
                  "title": "Active Users",
                  "description": "Active users in this period"
                },
                "retention_rate_pct": {
                  "type": "string",
                  "title": "Retention Rate Pct",
                  "description": "Retention rate percentage"
                },
                "events_per_user": {
                  "type": "string",
                  "title": "Events Per User",
                  "description": "Average events per user"
                }
              },
              "type": "object",
              "required": [
                "cohort_date",
                "campaign_id",
                "retention_period",
                "cohort_size",
                "active_users",
                "retention_rate_pct",
                "events_per_user"
              ],
              "title": "CohortDataPoint",
              "description": "Cohort analysis data point"
            },
            "CreateBatchesSchema": {
              "properties": {
                "campaign_ids": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Campaign Ids",
                  "description": "Specific campaign IDs (optional)"
                },
                "target_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Target Date",
                  "description": "Date to create batches for (defaults to today)"
                },
                "force_recreate": {
                  "type": "boolean",
                  "title": "Force Recreate",
                  "description": "Force recreation of existing batches",
                  "default": false
                }
              },
              "type": "object",
              "title": "CreateBatchesSchema",
              "description": "Request schema for creating batches"
            },
            "CreateCampaignSchema": {
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "title": "Name",
                  "description": "Campaign name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 1000
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description",
                  "description": "Campaign description"
                },
                "target_universe_id": {
                  "type": "string",
                  "title": "Target Universe Id",
                  "description": "Target universe ID"
                },
                "campaign_type": {
                  "type": "string",
                  "title": "Campaign Type",
                  "description": "Campaign type",
                  "default": "lead_generation"
                },
                "batch_settings": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BatchSettingsSchema"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "scheduled_start": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled Start",
                  "description": "Scheduled start time"
                },
                "scheduled_end": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled End",
                  "description": "Scheduled end time"
                }
              },
              "type": "object",
              "required": [
                "name",
                "target_universe_id"
              ],
              "title": "CreateCampaignSchema",
              "description": "Request schema for creating campaign"
            },
            "CreateGeographicBoundarySchema": {
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "title": "Name"
                },
                "level": {
                  "$ref": "#/components/schemas/GeographyLevel"
                },
                "parent_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Parent Id"
                },
                "code": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 20
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Code",
                  "description": "State code, ZIP, etc."
                },
                "fips_code": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 20
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Fips Code",
                  "description": "Federal Information Processing Standard code"
                },
                "center_latitude": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 90.0,
                      "minimum": -90.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Center Latitude"
                },
                "center_longitude": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 180.0,
                      "minimum": -180.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Center Longitude"
                },
                "country": {
                  "type": "string",
                  "maxLength": 10,
                  "title": "Country",
                  "default": "US"
                },
                "state_code": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 10
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "State Code"
                },
                "population": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Population"
                },
                "area_sq_miles": {
                  "anyOf": [
                    {
                      "type": "number",
                      "exclusiveMinimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Area Sq Miles"
                }
              },
              "type": "object",
              "required": [
                "name",
                "level"
              ],
              "title": "CreateGeographicBoundarySchema",
              "description": "Request schema for creating geographic boundary"
            },
            "CreateTargetUniverseSchema": {
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "title": "Name",
                  "description": "Universe name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 1000
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description",
                  "description": "Universe description"
                },
                "targeting_criteria": {
                  "$ref": "#/components/schemas/TargetingCriteriaSchema"
                },
                "estimated_size": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Estimated Size",
                  "description": "Estimated universe size"
                }
              },
              "type": "object",
              "required": [
                "name",
                "targeting_criteria"
              ],
              "title": "CreateTargetUniverseSchema",
              "description": "Request schema for creating target universe"
            },
            "DateRangeFilter": {
              "properties": {
                "start_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Start Date",
                  "description": "Start date for analytics data"
                },
                "end_date": {
                  "type": "string",
                  "format": "date",
                  "title": "End Date",
                  "description": "End date for analytics data"
                }
              },
              "type": "object",
              "required": [
                "start_date",
                "end_date"
              ],
              "title": "DateRangeFilter",
              "description": "Date range filter for analytics queries"
            },
            "ExperimentCreateRequest": {
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "Unique experiment name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description",
                  "description": "Experiment description"
                },
                "hypothesis": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Hypothesis",
                  "description": "Experiment hypothesis"
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "User creating the experiment"
                },
                "start_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Start Date",
                  "description": "When to start the experiment"
                },
                "end_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "End Date",
                  "description": "When to end the experiment"
                },
                "target_audience": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Target Audience",
                  "description": "Audience selection criteria"
                },
                "traffic_allocation_pct": {
                  "type": "number",
                  "maximum": 100.0,
                  "minimum": 0.0,
                  "title": "Traffic Allocation Pct",
                  "description": "% of users in experiment",
                  "default": 100.0
                },
                "minimum_sample_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Minimum Sample Size",
                  "description": "Minimum sample size needed"
                },
                "maximum_duration_days": {
                  "type": "integer",
                  "exclusiveMinimum": 0.0,
                  "title": "Maximum Duration Days",
                  "description": "Maximum experiment duration",
                  "default": 30
                },
                "primary_metric": {
                  "type": "string",
                  "title": "Primary Metric",
                  "description": "Main success metric"
                },
                "secondary_metrics": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Secondary Metrics",
                  "description": "Additional metrics to track"
                },
                "success_criteria": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Success Criteria",
                  "description": "Statistical significance criteria"
                },
                "randomization_unit": {
                  "type": "string",
                  "title": "Randomization Unit",
                  "description": "Unit for random assignment",
                  "default": "user_id"
                },
                "holdout_pct": {
                  "type": "number",
                  "maximum": 100.0,
                  "minimum": 0.0,
                  "title": "Holdout Pct",
                  "description": "% held out from experiment",
                  "default": 0.0
                },
                "confidence_level": {
                  "type": "number",
                  "exclusiveMaximum": 1.0,
                  "exclusiveMinimum": 0.0,
                  "title": "Confidence Level",
                  "description": "Statistical confidence level",
                  "default": 0.95
                }
              },
              "type": "object",
              "required": [
                "name",
                "created_by",
                "primary_metric"
              ],
              "title": "ExperimentCreateRequest",
              "description": "Request schema for creating a new experiment"
            },
            "ExperimentListRequest": {
              "properties": {
                "status": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ExperimentStatus"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Filter by status"
                },
                "created_by": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Created By",
                  "description": "Filter by creator"
                },
                "created_after": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Created After",
                  "description": "Filter experiments created after this date"
                },
                "created_before": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Created Before",
                  "description": "Filter experiments created before this date"
                },
                "page": {
                  "type": "integer",
                  "minimum": 1.0,
                  "title": "Page",
                  "description": "Page number",
                  "default": 1
                },
                "page_size": {
                  "type": "integer",
                  "maximum": 1000.0,
                  "minimum": 1.0,
                  "title": "Page Size",
                  "description": "Number of items per page",
                  "default": 50
                },
                "sort_by": {
                  "type": "string",
                  "title": "Sort By",
                  "description": "Field to sort by",
                  "default": "created_at"
                },
                "sort_order": {
                  "type": "string",
                  "pattern": "^(asc|desc)$",
                  "title": "Sort Order",
                  "description": "Sort order",
                  "default": "desc"
                }
              },
              "type": "object",
              "title": "ExperimentListRequest",
              "description": "Request schema for listing experiments"
            },
            "ExperimentListResponse": {
              "properties": {
                "experiments": {
                  "items": {
                    "$ref": "#/components/schemas/ExperimentResponse"
                  },
                  "type": "array",
                  "title": "Experiments"
                },
                "total_count": {
                  "type": "integer",
                  "title": "Total Count"
                },
                "page": {
                  "type": "integer",
                  "title": "Page"
                },
                "page_size": {
                  "type": "integer",
                  "title": "Page Size"
                },
                "total_pages": {
                  "type": "integer",
                  "title": "Total Pages"
                },
                "has_next": {
                  "type": "boolean",
                  "title": "Has Next"
                },
                "has_previous": {
                  "type": "boolean",
                  "title": "Has Previous"
                }
              },
              "type": "object",
              "required": [
                "experiments",
                "total_count",
                "page",
                "page_size",
                "total_pages",
                "has_next",
                "has_previous"
              ],
              "title": "ExperimentListResponse",
              "description": "Response schema for experiment listing"
            },
            "ExperimentResponse": {
              "properties": {
                "experiment_id": {
                  "type": "string",
                  "title": "Experiment Id"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "hypothesis": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Hypothesis"
                },
                "status": {
                  "$ref": "#/components/schemas/ExperimentStatus"
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By"
                },
                "approved_by": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Approved By"
                },
                "start_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Start Date"
                },
                "end_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "End Date"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Updated At"
                },
                "target_audience": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Target Audience"
                },
                "traffic_allocation_pct": {
                  "type": "number",
                  "title": "Traffic Allocation Pct"
                },
                "minimum_sample_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Minimum Sample Size"
                },
                "maximum_duration_days": {
                  "type": "integer",
                  "title": "Maximum Duration Days"
                },
                "primary_metric": {
                  "type": "string",
                  "title": "Primary Metric"
                },
                "secondary_metrics": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Secondary Metrics"
                },
                "success_criteria": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Success Criteria"
                },
                "randomization_unit": {
                  "type": "string",
                  "title": "Randomization Unit"
                },
                "holdout_pct": {
                  "type": "number",
                  "title": "Holdout Pct"
                },
                "confidence_level": {
                  "type": "number",
                  "title": "Confidence Level"
                },
                "results": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Results"
                },
                "statistical_power": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Statistical Power"
                },
                "analytics_tracking_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Analytics Tracking Id"
                },
                "feature_flag_key": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Feature Flag Key"
                },
                "variants": {
                  "items": {
                    "$ref": "#/components/schemas/ExperimentVariantResponse"
                  },
                  "type": "array",
                  "title": "Variants",
                  "default": []
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active",
                  "description": "Whether experiment is currently active"
                },
                "total_traffic_pct": {
                  "type": "number",
                  "title": "Total Traffic Pct",
                  "description": "Total traffic percentage including holdout"
                }
              },
              "type": "object",
              "required": [
                "experiment_id",
                "name",
                "description",
                "hypothesis",
                "status",
                "created_by",
                "approved_by",
                "start_date",
                "end_date",
                "created_at",
                "updated_at",
                "target_audience",
                "traffic_allocation_pct",
                "minimum_sample_size",
                "maximum_duration_days",
                "primary_metric",
                "secondary_metrics",
                "success_criteria",
                "randomization_unit",
                "holdout_pct",
                "confidence_level",
                "results",
                "statistical_power",
                "analytics_tracking_id",
                "feature_flag_key",
                "is_active",
                "total_traffic_pct"
              ],
              "title": "ExperimentResponse",
              "description": "Response schema for experiment information"
            },
            "ExperimentStatus": {
              "type": "string",
              "enum": [
                "draft",
                "scheduled",
                "running",
                "paused",
                "completed",
                "stopped",
                "failed"
              ],
              "title": "ExperimentStatus",
              "description": "Status values for experiments"
            },
            "ExperimentUpdateRequest": {
              "properties": {
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "hypothesis": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Hypothesis"
                },
                "status": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ExperimentStatus"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "approved_by": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Approved By"
                },
                "start_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Start Date"
                },
                "end_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "End Date"
                },
                "target_audience": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Target Audience"
                },
                "traffic_allocation_pct": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 100.0,
                      "minimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Traffic Allocation Pct"
                },
                "minimum_sample_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Minimum Sample Size"
                },
                "maximum_duration_days": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "exclusiveMinimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Maximum Duration Days"
                },
                "secondary_metrics": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Secondary Metrics"
                },
                "success_criteria": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Success Criteria"
                },
                "holdout_pct": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 100.0,
                      "minimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Holdout Pct"
                },
                "confidence_level": {
                  "anyOf": [
                    {
                      "type": "number",
                      "exclusiveMaximum": 1.0,
                      "exclusiveMinimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Confidence Level"
                },
                "results": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Results"
                },
                "statistical_power": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Statistical Power"
                }
              },
              "type": "object",
              "title": "ExperimentUpdateRequest",
              "description": "Request schema for updating an experiment"
            },
            "ExperimentVariantCreateRequest": {
              "properties": {
                "variant_key": {
                  "type": "string",
                  "title": "Variant Key",
                  "description": "Unique variant key"
                },
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "Variant display name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description",
                  "description": "Variant description"
                },
                "variant_type": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VariantType"
                    }
                  ],
                  "description": "Type of variant",
                  "default": "treatment"
                },
                "weight": {
                  "type": "number",
                  "minimum": 0.0,
                  "title": "Weight",
                  "description": "Relative weight for assignment",
                  "default": 1.0
                },
                "is_control": {
                  "type": "boolean",
                  "title": "Is Control",
                  "description": "Whether this is the control variant",
                  "default": false
                },
                "config": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Config",
                  "description": "Variant-specific configuration"
                },
                "feature_overrides": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Feature Overrides",
                  "description": "Feature flag overrides"
                }
              },
              "type": "object",
              "required": [
                "variant_key",
                "name"
              ],
              "title": "ExperimentVariantCreateRequest",
              "description": "Request schema for creating experiment variants"
            },
            "ExperimentVariantResponse": {
              "properties": {
                "variant_id": {
                  "type": "string",
                  "title": "Variant Id"
                },
                "experiment_id": {
                  "type": "string",
                  "title": "Experiment Id"
                },
                "variant_key": {
                  "type": "string",
                  "title": "Variant Key"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "variant_type": {
                  "$ref": "#/components/schemas/VariantType"
                },
                "weight": {
                  "type": "number",
                  "title": "Weight"
                },
                "is_control": {
                  "type": "boolean",
                  "title": "Is Control"
                },
                "config": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Config"
                },
                "feature_overrides": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Feature Overrides"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Updated At"
                }
              },
              "type": "object",
              "required": [
                "variant_id",
                "experiment_id",
                "variant_key",
                "name",
                "description",
                "variant_type",
                "weight",
                "is_control",
                "config",
                "feature_overrides",
                "created_at",
                "updated_at"
              ],
              "title": "ExperimentVariantResponse",
              "description": "Response schema for experiment variants"
            },
            "ExportRequest": {
              "properties": {
                "export_type": {
                  "type": "string",
                  "title": "Export Type",
                  "description": "Type of data to export (metrics, funnel, cohort, events)"
                },
                "date_range": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DateRangeFilter"
                    }
                  ],
                  "description": "Date range for export"
                },
                "segment_filter": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SegmentFilter"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Segment filters"
                },
                "include_raw_data": {
                  "type": "boolean",
                  "title": "Include Raw Data",
                  "description": "Include raw event data in export",
                  "default": false
                },
                "file_format": {
                  "type": "string",
                  "title": "File Format",
                  "description": "Export file format (csv, json, excel)",
                  "default": "csv"
                }
              },
              "type": "object",
              "required": [
                "export_type",
                "date_range"
              ],
              "title": "ExportRequest",
              "description": "Request model for CSV export"
            },
            "ExportResponse": {
              "properties": {
                "export_id": {
                  "type": "string",
                  "title": "Export Id",
                  "description": "Unique export identifier"
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Export status"
                },
                "download_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Download Url",
                  "description": "Download URL when ready"
                },
                "file_size_bytes": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "File Size Bytes",
                  "description": "File size in bytes"
                },
                "record_count": {
                  "type": "integer",
                  "title": "Record Count",
                  "description": "Number of records exported"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At",
                  "description": "Export creation timestamp"
                },
                "expires_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Expires At",
                  "description": "Download link expiration"
                }
              },
              "type": "object",
              "required": [
                "export_id",
                "status",
                "record_count",
                "created_at"
              ],
              "title": "ExportResponse",
              "description": "Response model for data export"
            },
            "FunnelDataPoint": {
              "properties": {
                "cohort_date": {
                  "type": "string",
                  "format": "date",
                  "title": "Cohort Date",
                  "description": "Cohort date"
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign Id",
                  "description": "Campaign identifier"
                },
                "from_stage": {
                  "type": "string",
                  "title": "From Stage",
                  "description": "Source funnel stage"
                },
                "to_stage": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "To Stage",
                  "description": "Target funnel stage"
                },
                "sessions_started": {
                  "type": "integer",
                  "title": "Sessions Started",
                  "description": "Sessions that started at from_stage"
                },
                "sessions_converted": {
                  "type": "integer",
                  "title": "Sessions Converted",
                  "description": "Sessions that converted to to_stage"
                },
                "conversion_rate_pct": {
                  "type": "string",
                  "title": "Conversion Rate Pct",
                  "description": "Conversion rate percentage"
                },
                "avg_time_to_convert_hours": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Avg Time To Convert Hours",
                  "description": "Average time to convert between stages"
                },
                "total_cost_cents": {
                  "type": "integer",
                  "title": "Total Cost Cents",
                  "description": "Total cost for this conversion path"
                },
                "cost_per_conversion_cents": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Cost Per Conversion Cents",
                  "description": "Cost per conversion"
                }
              },
              "type": "object",
              "required": [
                "cohort_date",
                "campaign_id",
                "from_stage",
                "to_stage",
                "sessions_started",
                "sessions_converted",
                "conversion_rate_pct",
                "total_cost_cents"
              ],
              "title": "FunnelDataPoint",
              "description": "Funnel analysis data point"
            },
            "FunnelMetricsRequest": {
              "properties": {
                "date_range": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DateRangeFilter"
                    }
                  ],
                  "description": "Date range for funnel data"
                },
                "segment_filter": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SegmentFilter"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Segment filters"
                },
                "include_conversion_paths": {
                  "type": "boolean",
                  "title": "Include Conversion Paths",
                  "description": "Include detailed conversion path analysis",
                  "default": false
                },
                "include_drop_off_analysis": {
                  "type": "boolean",
                  "title": "Include Drop Off Analysis",
                  "description": "Include drop-off analysis for each stage",
                  "default": false
                }
              },
              "type": "object",
              "required": [
                "date_range"
              ],
              "title": "FunnelMetricsRequest",
              "description": "Request model for funnel metrics"
            },
            "FunnelMetricsResponse": {
              "properties": {
                "request_id": {
                  "type": "string",
                  "title": "Request Id",
                  "description": "Unique request identifier"
                },
                "date_range": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DateRangeFilter"
                    }
                  ],
                  "description": "Requested date range"
                },
                "total_conversions": {
                  "type": "integer",
                  "title": "Total Conversions",
                  "description": "Total number of conversion paths"
                },
                "overall_conversion_rate": {
                  "type": "string",
                  "title": "Overall Conversion Rate",
                  "description": "Overall conversion rate"
                },
                "data": {
                  "items": {
                    "$ref": "#/components/schemas/FunnelDataPoint"
                  },
                  "type": "array",
                  "title": "Data",
                  "description": "Funnel data points"
                },
                "stage_summary": {
                  "type": "object",
                  "title": "Stage Summary",
                  "description": "Summary by stage"
                },
                "conversion_paths": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Conversion Paths",
                  "description": "Detailed conversion paths (if requested)"
                },
                "generated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Generated At",
                  "description": "Response generation timestamp"
                }
              },
              "type": "object",
              "required": [
                "request_id",
                "date_range",
                "total_conversions",
                "overall_conversion_rate",
                "data",
                "stage_summary",
                "generated_at"
              ],
              "title": "FunnelMetricsResponse",
              "description": "Response model for funnel metrics"
            },
            "GeographicBoundaryResponseSchema": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "level": {
                  "type": "string",
                  "title": "Level"
                },
                "parent_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Parent Id"
                },
                "code": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Code"
                },
                "fips_code": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Fips Code"
                },
                "center_latitude": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Center Latitude"
                },
                "center_longitude": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Center Longitude"
                },
                "country": {
                  "type": "string",
                  "title": "Country"
                },
                "state_code": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "State Code"
                },
                "county_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "County Name"
                },
                "population": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Population"
                },
                "area_sq_miles": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Area Sq Miles"
                },
                "data_source": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data Source"
                },
                "last_updated": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Last Updated"
                }
              },
              "type": "object",
              "required": [
                "id",
                "name",
                "level",
                "parent_id",
                "code",
                "fips_code",
                "center_latitude",
                "center_longitude",
                "country",
                "state_code",
                "county_name",
                "population",
                "area_sq_miles",
                "data_source",
                "last_updated"
              ],
              "title": "GeographicBoundaryResponseSchema",
              "description": "Response schema for geographic boundary"
            },
            "GeographicConstraintSchema": {
              "properties": {
                "level": {
                  "$ref": "#/components/schemas/GeographyLevel"
                },
                "values": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "minItems": 1,
                  "title": "Values",
                  "description": "Geographic values (states, cities, etc.)"
                },
                "radius_miles": {
                  "anyOf": [
                    {
                      "type": "number",
                      "exclusiveMinimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Radius Miles",
                  "description": "Radius in miles for location-based targeting"
                },
                "center_lat": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 90.0,
                      "minimum": -90.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Center Lat"
                },
                "center_lng": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 180.0,
                      "minimum": -180.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Center Lng"
                }
              },
              "type": "object",
              "required": [
                "level",
                "values"
              ],
              "title": "GeographicConstraintSchema",
              "description": "Geographic constraint for targeting"
            },
            "GeographyLevel": {
              "type": "string",
              "enum": [
                "country",
                "state",
                "county",
                "city",
                "zip_code",
                "neighborhood",
                "radius"
              ],
              "title": "GeographyLevel",
              "description": "Geographic hierarchy levels"
            },
            "HTTPValidationError": {
              "properties": {
                "detail": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationError"
                  },
                  "type": "array",
                  "title": "Detail"
                }
              },
              "type": "object",
              "title": "HTTPValidationError"
            },
            "HealthResponse": {
              "properties": {
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Service status"
                },
                "version": {
                  "type": "string",
                  "title": "Version",
                  "description": "API version"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp",
                  "description": "Health check timestamp"
                },
                "components": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Components",
                  "description": "Component health status"
                }
              },
              "type": "object",
              "required": [
                "status",
                "version",
                "components"
              ],
              "title": "HealthResponse",
              "description": "Health check response schema"
            },
            "MetricDataPoint": {
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "title": "Date",
                  "description": "Date of the metric"
                },
                "metric_type": {
                  "type": "string",
                  "title": "Metric Type",
                  "description": "Type of metric"
                },
                "value": {
                  "type": "string",
                  "title": "Value",
                  "description": "Metric value"
                },
                "count": {
                  "type": "integer",
                  "title": "Count",
                  "description": "Number of events contributing to this metric"
                },
                "segment_breakdown": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Segment Breakdown",
                  "description": "Breakdown by segments"
                }
              },
              "type": "object",
              "required": [
                "date",
                "metric_type",
                "value",
                "count"
              ],
              "title": "MetricDataPoint",
              "description": "Individual metric data point"
            },
            "MetricsRequest": {
              "properties": {
                "date_range": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DateRangeFilter"
                    }
                  ],
                  "description": "Date range for metrics"
                },
                "segment_filter": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SegmentFilter"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Segment filters"
                },
                "metric_types": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Metric Types",
                  "description": "Types of metrics to retrieve (defaults to all)"
                },
                "aggregation_period": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Aggregation Period",
                  "description": "Aggregation period for time series data",
                  "default": "daily"
                },
                "include_breakdowns": {
                  "type": "boolean",
                  "title": "Include Breakdowns",
                  "description": "Include segment breakdowns in response",
                  "default": false
                },
                "limit": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "maximum": 10000.0,
                      "minimum": 1.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Limit",
                  "description": "Maximum number of records to return",
                  "default": 1000
                }
              },
              "type": "object",
              "required": [
                "date_range"
              ],
              "title": "MetricsRequest",
              "description": "Request model for getting metrics data"
            },
            "MetricsResponse": {
              "properties": {
                "request_id": {
                  "type": "string",
                  "title": "Request Id",
                  "description": "Unique request identifier"
                },
                "date_range": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DateRangeFilter"
                    }
                  ],
                  "description": "Requested date range"
                },
                "total_records": {
                  "type": "integer",
                  "title": "Total Records",
                  "description": "Total number of records"
                },
                "aggregation_period": {
                  "type": "string",
                  "title": "Aggregation Period",
                  "description": "Aggregation period used"
                },
                "data": {
                  "items": {
                    "$ref": "#/components/schemas/MetricDataPoint"
                  },
                  "type": "array",
                  "title": "Data",
                  "description": "Metrics data points"
                },
                "summary": {
                  "type": "object",
                  "title": "Summary",
                  "description": "Summary statistics"
                },
                "generated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Generated At",
                  "description": "Response generation timestamp"
                }
              },
              "type": "object",
              "required": [
                "request_id",
                "date_range",
                "total_records",
                "aggregation_period",
                "data",
                "summary",
                "generated_at"
              ],
              "title": "MetricsResponse",
              "description": "Response model for metrics data"
            },
            "PageSpeedMetrics": {
              "properties": {
                "performance_score": {
                  "type": "integer",
                  "title": "Performance Score",
                  "description": "Performance score (0-100)"
                },
                "accessibility_score": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Accessibility Score",
                  "description": "Accessibility score"
                },
                "seo_score": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Seo Score",
                  "description": "SEO score"
                },
                "best_practices_score": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Best Practices Score",
                  "description": "Best practices score"
                },
                "largest_contentful_paint": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Largest Contentful Paint",
                  "description": "LCP in milliseconds"
                },
                "first_input_delay": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "First Input Delay",
                  "description": "FID in milliseconds"
                },
                "cumulative_layout_shift": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Cumulative Layout Shift",
                  "description": "CLS score"
                },
                "speed_index": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Speed Index",
                  "description": "Speed Index in milliseconds"
                },
                "time_to_interactive": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Time To Interactive",
                  "description": "TTI in milliseconds"
                }
              },
              "type": "object",
              "required": [
                "performance_score"
              ],
              "title": "PageSpeedMetrics",
              "description": "PageSpeed performance metrics"
            },
            "PipelineRunHistoryRequest": {
              "properties": {
                "pipeline_name": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Pipeline Name",
                  "description": "Filter by pipeline name"
                },
                "status": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PipelineRunStatus"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Filter by status"
                },
                "pipeline_type": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PipelineType"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "Filter by pipeline type"
                },
                "environment": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Environment",
                  "description": "Filter by environment"
                },
                "triggered_by": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Triggered By",
                  "description": "Filter by who triggered"
                },
                "start_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Start Date",
                  "description": "Filter runs after this date"
                },
                "end_date": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "End Date",
                  "description": "Filter runs before this date"
                },
                "page": {
                  "type": "integer",
                  "minimum": 1.0,
                  "title": "Page",
                  "description": "Page number",
                  "default": 1
                },
                "page_size": {
                  "type": "integer",
                  "maximum": 1000.0,
                  "minimum": 1.0,
                  "title": "Page Size",
                  "description": "Number of items per page",
                  "default": 50
                },
                "sort_by": {
                  "type": "string",
                  "title": "Sort By",
                  "description": "Field to sort by",
                  "default": "created_at"
                },
                "sort_order": {
                  "type": "string",
                  "pattern": "^(asc|desc)$",
                  "title": "Sort Order",
                  "description": "Sort order",
                  "default": "desc"
                }
              },
              "type": "object",
              "title": "PipelineRunHistoryRequest",
              "description": "Request schema for pipeline run history"
            },
            "PipelineRunHistoryResponse": {
              "properties": {
                "runs": {
                  "items": {
                    "$ref": "#/components/schemas/PipelineRunResponse"
                  },
                  "type": "array",
                  "title": "Runs"
                },
                "total_count": {
                  "type": "integer",
                  "title": "Total Count"
                },
                "page": {
                  "type": "integer",
                  "title": "Page"
                },
                "page_size": {
                  "type": "integer",
                  "title": "Page Size"
                },
                "total_pages": {
                  "type": "integer",
                  "title": "Total Pages"
                },
                "has_next": {
                  "type": "boolean",
                  "title": "Has Next"
                },
                "has_previous": {
                  "type": "boolean",
                  "title": "Has Previous"
                }
              },
              "type": "object",
              "required": [
                "runs",
                "total_count",
                "page",
                "page_size",
                "total_pages",
                "has_next",
                "has_previous"
              ],
              "title": "PipelineRunHistoryResponse",
              "description": "Response schema for pipeline run history"
            },
            "PipelineRunResponse": {
              "properties": {
                "run_id": {
                  "type": "string",
                  "title": "Run Id"
                },
                "pipeline_name": {
                  "type": "string",
                  "title": "Pipeline Name"
                },
                "pipeline_version": {
                  "type": "string",
                  "title": "Pipeline Version"
                },
                "status": {
                  "$ref": "#/components/schemas/PipelineRunStatus"
                },
                "pipeline_type": {
                  "$ref": "#/components/schemas/PipelineType"
                },
                "triggered_by": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Triggered By"
                },
                "trigger_reason": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Trigger Reason"
                },
                "scheduled_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled At"
                },
                "started_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Started At"
                },
                "completed_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Completed At"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Updated At"
                },
                "execution_time_seconds": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Execution Time Seconds"
                },
                "retry_count": {
                  "type": "integer",
                  "title": "Retry Count"
                },
                "max_retries": {
                  "type": "integer",
                  "title": "Max Retries"
                },
                "error_message": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error Message"
                },
                "error_details": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error Details"
                },
                "config": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Config"
                },
                "parameters": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Parameters"
                },
                "environment": {
                  "type": "string",
                  "title": "Environment"
                },
                "records_processed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Records Processed"
                },
                "records_failed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Records Failed"
                },
                "bytes_processed": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Bytes Processed"
                },
                "cost_cents": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Cost Cents"
                },
                "external_run_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "External Run Id"
                },
                "external_system": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "External System"
                },
                "logs_url": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Logs Url"
                },
                "is_complete": {
                  "type": "boolean",
                  "title": "Is Complete",
                  "description": "Whether the pipeline is in a terminal state"
                },
                "success_rate": {
                  "type": "number",
                  "title": "Success Rate",
                  "description": "Success rate for processed records"
                }
              },
              "type": "object",
              "required": [
                "run_id",
                "pipeline_name",
                "pipeline_version",
                "status",
                "pipeline_type",
                "triggered_by",
                "trigger_reason",
                "scheduled_at",
                "started_at",
                "completed_at",
                "created_at",
                "updated_at",
                "execution_time_seconds",
                "retry_count",
                "max_retries",
                "error_message",
                "error_details",
                "config",
                "parameters",
                "environment",
                "records_processed",
                "records_failed",
                "bytes_processed",
                "cost_cents",
                "external_run_id",
                "external_system",
                "logs_url",
                "is_complete",
                "success_rate"
              ],
              "title": "PipelineRunResponse",
              "description": "Response schema for pipeline run information"
            },
            "PipelineRunStatus": {
              "type": "string",
              "enum": [
                "pending",
                "running",
                "success",
                "failed",
                "cancelled",
                "timeout",
                "retrying",
                "paused"
              ],
              "title": "PipelineRunStatus",
              "description": "Status values for pipeline runs"
            },
            "PipelineStatusResponse": {
              "properties": {
                "run_id": {
                  "type": "string",
                  "title": "Run Id"
                },
                "status": {
                  "$ref": "#/components/schemas/PipelineRunStatus"
                },
                "progress_pct": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Progress Pct",
                  "description": "Estimated progress percentage"
                },
                "current_task": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Current Task",
                  "description": "Currently executing task"
                },
                "tasks_completed": {
                  "type": "integer",
                  "title": "Tasks Completed",
                  "description": "Number of tasks completed",
                  "default": 0
                },
                "tasks_total": {
                  "type": "integer",
                  "title": "Tasks Total",
                  "description": "Total number of tasks",
                  "default": 0
                },
                "execution_time_seconds": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Execution Time Seconds"
                },
                "estimated_remaining_seconds": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Estimated Remaining Seconds"
                },
                "error_message": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error Message"
                },
                "last_updated": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Last Updated"
                }
              },
              "type": "object",
              "required": [
                "run_id",
                "status",
                "execution_time_seconds",
                "estimated_remaining_seconds",
                "error_message",
                "last_updated"
              ],
              "title": "PipelineStatusResponse",
              "description": "Response schema for pipeline status checking"
            },
            "PipelineTriggerRequest": {
              "properties": {
                "pipeline_name": {
                  "type": "string",
                  "title": "Pipeline Name",
                  "description": "Name of the pipeline to run"
                },
                "pipeline_type": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PipelineType"
                    }
                  ],
                  "description": "Type of pipeline execution",
                  "default": "manual"
                },
                "triggered_by": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Triggered By",
                  "description": "User or system triggering the pipeline"
                },
                "trigger_reason": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Trigger Reason",
                  "description": "Reason for triggering the pipeline"
                },
                "parameters": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Parameters",
                  "description": "Pipeline execution parameters"
                },
                "config": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Config",
                  "description": "Pipeline configuration overrides"
                },
                "environment": {
                  "type": "string",
                  "title": "Environment",
                  "description": "Execution environment",
                  "default": "production"
                },
                "scheduled_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled At",
                  "description": "When to schedule the pipeline"
                }
              },
              "type": "object",
              "required": [
                "pipeline_name"
              ],
              "title": "PipelineTriggerRequest",
              "description": "Request schema for triggering a pipeline run"
            },
            "PipelineType": {
              "type": "string",
              "enum": [
                "daily_batch",
                "real_time",
                "backfill",
                "experiment",
                "manual",
                "scheduled"
              ],
              "title": "PipelineType",
              "description": "Types of orchestration pipelines"
            },
            "ProductType": {
              "type": "string",
              "enum": [
                "audit_report",
                "bulk_reports",
                "premium_report"
              ],
              "title": "ProductType",
              "description": "Types of products we sell"
            },
            "QuotaAllocationResponseSchema": {
              "properties": {
                "total_daily_quota": {
                  "type": "integer",
                  "title": "Total Daily Quota"
                },
                "used_quota": {
                  "type": "integer",
                  "title": "Used Quota"
                },
                "remaining_quota": {
                  "type": "integer",
                  "title": "Remaining Quota"
                },
                "campaign_allocations": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "type": "object",
                  "title": "Campaign Allocations"
                },
                "utilization_rate": {
                  "type": "number",
                  "title": "Utilization Rate"
                }
              },
              "type": "object",
              "required": [
                "total_daily_quota",
                "used_quota",
                "remaining_quota",
                "campaign_allocations",
                "utilization_rate"
              ],
              "title": "QuotaAllocationResponseSchema",
              "description": "Response schema for quota allocation"
            },
            "RefreshUniverseSchema": {
              "properties": {
                "universe_id": {
                  "type": "string",
                  "title": "Universe Id"
                },
                "force_full_refresh": {
                  "type": "boolean",
                  "title": "Force Full Refresh",
                  "description": "Force complete refresh vs incremental",
                  "default": false
                }
              },
              "type": "object",
              "required": [
                "universe_id"
              ],
              "title": "RefreshUniverseSchema",
              "description": "Request schema for refreshing universe"
            },
            "SegmentFilter": {
              "properties": {
                "campaign_ids": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Campaign Ids",
                  "description": "Filter by campaign IDs"
                },
                "business_verticals": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Business Verticals",
                  "description": "Filter by business verticals"
                },
                "geographic_regions": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Geographic Regions",
                  "description": "Filter by geographic regions"
                },
                "funnel_stages": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Funnel Stages",
                  "description": "Filter by funnel stages"
                },
                "event_types": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Event Types",
                  "description": "Filter by event types"
                }
              },
              "type": "object",
              "title": "SegmentFilter",
              "description": "Segment filter for analytics queries"
            },
            "SuccessPageResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "description": "Whether payment was successful"
                },
                "purchase_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Purchase Id",
                  "description": "Purchase ID"
                },
                "session_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Session Id",
                  "description": "Session ID"
                },
                "customer_email": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Customer Email",
                  "description": "Customer email"
                },
                "amount_total_usd": {
                  "anyOf": [
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Amount Total Usd",
                  "description": "Total amount paid"
                },
                "payment_status": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Payment Status",
                  "description": "Payment status"
                },
                "items": {
                  "anyOf": [
                    {
                      "items": {
                        "type": "object"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Items",
                  "description": "Purchased items"
                },
                "report_status": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Report Status",
                  "description": "Report generation status"
                },
                "estimated_delivery": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Estimated Delivery",
                  "description": "Estimated delivery time"
                },
                "error": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error",
                  "description": "Error message if failed"
                }
              },
              "type": "object",
              "required": [
                "success"
              ],
              "title": "SuccessPageResponse",
              "description": "Schema for success page response",
              "example": {
                "amount_total_usd": 29.99,
                "customer_email": "customer@example.com",
                "estimated_delivery": "within 24 hours",
                "items": [
                  {
                    "business_url": "https://example.com",
                    "name": "Website Audit Report",
                    "type": "audit_report"
                  }
                ],
                "payment_status": "paid",
                "purchase_id": "purchase_123456",
                "report_status": "generating",
                "session_id": "cs_test_123",
                "success": true
              }
            },
            "SuccessResponse": {
              "properties": {
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "Success message"
                },
                "data": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data",
                  "description": "Additional response data"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp",
                  "description": "Response timestamp"
                }
              },
              "type": "object",
              "required": [
                "message"
              ],
              "title": "SuccessResponse",
              "description": "Standard success response schema"
            },
            "TargetUniverseResponseSchema": {
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Id"
                },
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "verticals": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Verticals"
                },
                "geography_config": {
                  "type": "object",
                  "title": "Geography Config"
                },
                "estimated_size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Estimated Size"
                },
                "actual_size": {
                  "type": "integer",
                  "title": "Actual Size"
                },
                "qualified_count": {
                  "type": "integer",
                  "title": "Qualified Count"
                },
                "last_refresh": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Last Refresh"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Created At"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Updated At"
                },
                "created_by": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Created By"
                },
                "is_active": {
                  "type": "boolean",
                  "title": "Is Active"
                }
              },
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "verticals",
                "geography_config",
                "estimated_size",
                "actual_size",
                "qualified_count",
                "last_refresh",
                "created_at",
                "updated_at",
                "created_by",
                "is_active"
              ],
              "title": "TargetUniverseResponseSchema",
              "description": "Response schema for target universe"
            },
            "TargetingCriteriaSchema": {
              "properties": {
                "verticals": {
                  "items": {
                    "$ref": "#/components/schemas/VerticalMarket"
                  },
                  "type": "array",
                  "minItems": 1,
                  "title": "Verticals",
                  "description": "Target vertical markets"
                },
                "geographic_constraints": {
                  "items": {
                    "$ref": "#/components/schemas/GeographicConstraintSchema"
                  },
                  "type": "array",
                  "minItems": 1,
                  "title": "Geographic Constraints"
                },
                "business_size_min": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 1.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Business Size Min",
                  "description": "Minimum business size (employees)"
                },
                "business_size_max": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 1.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Business Size Max",
                  "description": "Maximum business size (employees)"
                },
                "website_required": {
                  "type": "boolean",
                  "title": "Website Required",
                  "description": "Require business to have website",
                  "default": true
                },
                "phone_required": {
                  "type": "boolean",
                  "title": "Phone Required",
                  "description": "Require business to have phone",
                  "default": true
                },
                "email_required": {
                  "type": "boolean",
                  "title": "Email Required",
                  "description": "Require business to have email",
                  "default": false
                },
                "min_rating": {
                  "anyOf": [
                    {
                      "type": "number",
                      "maximum": 5.0,
                      "minimum": 0.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Min Rating",
                  "description": "Minimum rating requirement"
                },
                "max_age_days": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 1.0
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Max Age Days",
                  "description": "Maximum age of business data in days"
                }
              },
              "type": "object",
              "required": [
                "verticals",
                "geographic_constraints"
              ],
              "title": "TargetingCriteriaSchema",
              "description": "Targeting criteria for universe creation"
            },
            "TechStackResult": {
              "properties": {
                "technology_name": {
                  "type": "string",
                  "title": "Technology Name",
                  "description": "Name of detected technology"
                },
                "category": {
                  "type": "string",
                  "title": "Category",
                  "description": "Technology category"
                },
                "confidence": {
                  "type": "number",
                  "title": "Confidence",
                  "description": "Detection confidence (0-1)"
                },
                "version": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Version",
                  "description": "Detected version"
                }
              },
              "type": "object",
              "required": [
                "technology_name",
                "category",
                "confidence"
              ],
              "title": "TechStackResult",
              "description": "Technology stack detection result"
            },
            "TriggerAssessmentRequest": {
              "properties": {
                "business_id": {
                  "type": "string",
                  "title": "Business Id",
                  "description": "Business identifier"
                },
                "url": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri",
                  "title": "Url",
                  "description": "Website URL to assess"
                },
                "assessment_types": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/AssessmentType"
                      },
                      "type": "array"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Assessment Types",
                  "description": "Types of assessments to run (defaults to all)"
                },
                "industry": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Industry",
                  "description": "Industry for specialized insights",
                  "default": "default"
                },
                "priority": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Priority",
                  "description": "Assessment priority (low, medium, high, critical)",
                  "default": "medium"
                },
                "session_config": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Session Config",
                  "description": "Additional configuration for the assessment session"
                },
                "callback_url": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 2083,
                      "minLength": 1,
                      "format": "uri"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Callback Url",
                  "description": "URL to POST results when assessment completes"
                }
              },
              "type": "object",
              "required": [
                "business_id",
                "url"
              ],
              "title": "TriggerAssessmentRequest",
              "description": "Request model for triggering an assessment",
              "example": {
                "assessment_types": [
                  "pagespeed",
                  "tech_stack",
                  "ai_insights"
                ],
                "business_id": "biz_123456789",
                "callback_url": "https://api.example.com/webhooks/assessment-complete",
                "industry": "ecommerce",
                "priority": "high",
                "session_config": {
                  "detailed_analysis": true,
                  "include_screenshots": false
                },
                "url": "https://example-store.com"
              }
            },
            "TriggerAssessmentResponse": {
              "properties": {
                "session_id": {
                  "type": "string",
                  "title": "Session Id",
                  "description": "Unique session identifier for tracking"
                },
                "business_id": {
                  "type": "string",
                  "title": "Business Id",
                  "description": "Business identifier"
                },
                "status": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AssessmentStatus"
                    }
                  ],
                  "description": "Initial assessment status"
                },
                "total_assessments": {
                  "type": "integer",
                  "title": "Total Assessments",
                  "description": "Number of assessments to run"
                },
                "estimated_completion_time": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Estimated Completion Time",
                  "description": "Estimated completion time"
                },
                "tracking_url": {
                  "type": "string",
                  "title": "Tracking Url",
                  "description": "URL to check assessment status"
                }
              },
              "type": "object",
              "required": [
                "session_id",
                "business_id",
                "status",
                "total_assessments",
                "tracking_url"
              ],
              "title": "TriggerAssessmentResponse",
              "description": "Response model for assessment trigger",
              "example": {
                "business_id": "biz_123456789",
                "estimated_completion_time": "2025-06-09T03:00:00Z",
                "session_id": "sess_abcdef123456",
                "status": "running",
                "total_assessments": 3,
                "tracking_url": "/api/v1/assessments/sess_abcdef123456/status"
              }
            },
            "UniversePriorityResponseSchema": {
              "properties": {
                "universe_id": {
                  "type": "string",
                  "title": "Universe Id"
                },
                "universe_name": {
                  "type": "string",
                  "title": "Universe Name"
                },
                "priority_score": {
                  "type": "number",
                  "title": "Priority Score"
                },
                "freshness_score": {
                  "type": "number",
                  "title": "Freshness Score"
                },
                "total_score": {
                  "type": "number",
                  "title": "Total Score"
                },
                "last_refresh": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Last Refresh"
                },
                "estimated_refresh_time": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Estimated Refresh Time"
                }
              },
              "type": "object",
              "required": [
                "universe_id",
                "universe_name",
                "priority_score",
                "freshness_score",
                "total_score",
                "last_refresh",
                "estimated_refresh_time"
              ],
              "title": "UniversePriorityResponseSchema",
              "description": "Response schema for universe priority"
            },
            "UpdateCampaignSchema": {
              "properties": {
                "name": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 1000
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "status": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CampaignStatus"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "batch_settings": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BatchSettingsSchema"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "scheduled_start": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled Start"
                },
                "scheduled_end": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Scheduled End"
                }
              },
              "type": "object",
              "title": "UpdateCampaignSchema",
              "description": "Request schema for updating campaign"
            },
            "UpdateTargetUniverseSchema": {
              "properties": {
                "name": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Name"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string",
                      "maxLength": 1000
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Description"
                },
                "is_active": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Is Active"
                }
              },
              "type": "object",
              "title": "UpdateTargetUniverseSchema",
              "description": "Request schema for updating target universe"
            },
            "ValidationError": {
              "properties": {
                "loc": {
                  "items": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "integer"
                      }
                    ]
                  },
                  "type": "array",
                  "title": "Location"
                },
                "msg": {
                  "type": "string",
                  "title": "Message"
                },
                "type": {
                  "type": "string",
                  "title": "Error Type"
                }
              },
              "type": "object",
              "required": [
                "loc",
                "msg",
                "type"
              ],
              "title": "ValidationError"
            },
            "VariantAssignmentRequest": {
              "properties": {
                "experiment_id": {
                  "type": "string",
                  "title": "Experiment Id",
                  "description": "Experiment ID"
                },
                "assignment_unit": {
                  "type": "string",
                  "title": "Assignment Unit",
                  "description": "Unit to assign (user_id, session_id, etc.)"
                },
                "user_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "User Id",
                  "description": "User identifier"
                },
                "session_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Session Id",
                  "description": "Session identifier"
                },
                "assignment_context": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Assignment Context",
                  "description": "Context data at assignment time"
                },
                "user_properties": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "User Properties",
                  "description": "User properties at assignment"
                }
              },
              "type": "object",
              "required": [
                "experiment_id",
                "assignment_unit"
              ],
              "title": "VariantAssignmentRequest",
              "description": "Request schema for variant assignment"
            },
            "VariantAssignmentResponse": {
              "properties": {
                "assignment_id": {
                  "type": "string",
                  "title": "Assignment Id"
                },
                "experiment_id": {
                  "type": "string",
                  "title": "Experiment Id"
                },
                "variant_id": {
                  "type": "string",
                  "title": "Variant Id"
                },
                "variant_key": {
                  "type": "string",
                  "title": "Variant Key"
                },
                "assignment_unit": {
                  "type": "string",
                  "title": "Assignment Unit"
                },
                "user_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "User Id"
                },
                "session_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Session Id"
                },
                "assigned_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Assigned At"
                },
                "first_exposure_at": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "First Exposure At"
                },
                "is_forced": {
                  "type": "boolean",
                  "title": "Is Forced"
                },
                "is_holdout": {
                  "type": "boolean",
                  "title": "Is Holdout"
                },
                "assignment_context": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Assignment Context"
                }
              },
              "type": "object",
              "required": [
                "assignment_id",
                "experiment_id",
                "variant_id",
                "variant_key",
                "assignment_unit",
                "user_id",
                "session_id",
                "assigned_at",
                "first_exposure_at",
                "is_forced",
                "is_holdout",
                "assignment_context"
              ],
              "title": "VariantAssignmentResponse",
              "description": "Response schema for variant assignment"
            },
            "VariantType": {
              "type": "string",
              "enum": [
                "control",
                "treatment",
                "holdout"
              ],
              "title": "VariantType",
              "description": "Types of experiment variants"
            },
            "VerticalMarket": {
              "type": "string",
              "enum": [
                "restaurants",
                "retail",
                "professional_services",
                "healthcare",
                "automotive",
                "real_estate",
                "fitness",
                "beauty_wellness",
                "home_services",
                "education",
                "hospitality",
                "financial_services",
                "technology",
                "manufacturing",
                "construction",
                "legal",
                "nonprofit",
                "entertainment",
                "agriculture",
                "transportation"
              ],
              "title": "VerticalMarket",
              "description": "Industry verticals for targeting"
            },
            "WebhookEventResponse": {
              "properties": {
                "success": {
                  "type": "boolean",
                  "title": "Success",
                  "description": "Whether webhook processing was successful"
                },
                "event_id": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Event Id",
                  "description": "Processed event ID"
                },
                "event_type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Event Type",
                  "description": "Event type that was processed"
                },
                "processing_status": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Processing Status",
                  "description": "Processing status"
                },
                "data": {
                  "anyOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Data",
                  "description": "Processing result data"
                },
                "error": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Error",
                  "description": "Error message if failed"
                }
              },
              "type": "object",
              "required": [
                "success"
              ],
              "title": "WebhookEventResponse",
              "description": "Schema for webhook event processing response",
              "example": {
                "data": {
                  "purchase_id": "purchase_123456",
                  "report_generation": {
                    "job_id": "report_job_123",
                    "status": "triggered"
                  },
                  "session_id": "cs_test_123"
                },
                "event_id": "evt_1234567890",
                "event_type": "checkout.session.completed",
                "processing_status": "completed",
                "success": true
              }
            },
            "d10_analytics__schemas__HealthCheckResponse": {
              "properties": {
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Service health status"
                },
                "version": {
                  "type": "string",
                  "title": "Version",
                  "description": "API version"
                },
                "uptime_seconds": {
                  "type": "integer",
                  "title": "Uptime Seconds",
                  "description": "Service uptime in seconds"
                },
                "dependencies": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Dependencies",
                  "description": "Dependency health status"
                },
                "metrics_count": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Metrics Count",
                  "description": "Total metrics records"
                },
                "last_aggregation": {
                  "anyOf": [
                    {
                      "type": "string",
                      "format": "date-time"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Last Aggregation",
                  "description": "Last successful aggregation timestamp"
                }
              },
              "type": "object",
              "required": [
                "status",
                "version",
                "uptime_seconds",
                "dependencies"
              ],
              "title": "HealthCheckResponse",
              "description": "Health check response"
            },
            "d3_assessment__schemas__HealthCheckResponse": {
              "properties": {
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Service health status"
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Timestamp",
                  "description": "Health check timestamp"
                },
                "version": {
                  "type": "string",
                  "title": "Version",
                  "description": "API version"
                },
                "uptime_seconds": {
                  "type": "integer",
                  "title": "Uptime Seconds",
                  "description": "Service uptime in seconds"
                },
                "dependencies": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "type": "object",
                  "title": "Dependencies",
                  "description": "Status of dependent services"
                }
              },
              "type": "object",
              "required": [
                "status",
                "version",
                "uptime_seconds",
                "dependencies"
              ],
              "title": "HealthCheckResponse",
              "description": "Health check response model",
              "example": {
                "dependencies": {
                  "database": "healthy",
                  "llm_service": "healthy",
                  "pagespeed_api": "healthy"
                },
                "status": "healthy",
                "timestamp": "2025-06-09T02:45:00Z",
                "uptime_seconds": 86400,
                "version": "1.0.0"
              }
            }
          }
        }
      }
    },
    {
      "service": "Nginx Health",
      "url": "http://localhost/health",
      "status_code": 200,
      "success": true,
      "response": {
        "status": "healthy",
        "version": "0.1.0",
        "environment": "production"
      }
    },
    {
      "service": "PostgreSQL",
      "url": "http://localhost:5432/",
      "success": false,
      "error": "('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))"
    },
    {
      "service": "Redis",
      "url": "http://localhost:6379/",
      "success": false,
      "error": "('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))"
    },
    {
      "service": "Prometheus",
      "url": "http://localhost:9091/",
      "status_code": 200,
      "success": true
    },
    {
      "service": "Analytics Health",
      "url": "http://localhost:8000/api/v1/analytics/health",
      "status_code": 200,
      "success": true,
      "response": {
        "status": "healthy",
        "version": "1.0.0",
        "uptime_seconds": 86400,
        "dependencies": {
          "database": "healthy",
          "warehouse": "healthy",
          "materialized_views": "healthy"
        },
        "metrics_count": 10000,
        "last_aggregation": "2025-06-12T00:30:50.552585"
      }
    },
    {
      "service": "Assessment Health",
      "url": "http://localhost:8000/api/v1/assessments/health",
      "status_code": 200,
      "success": true,
      "response": {
        "status": "healthy",
        "timestamp": "2025-06-12T01:30:50.554291",
        "version": "1.0.0",
        "uptime_seconds": 86400,
        "dependencies": {
          "database": "healthy",
          "pagespeed_api": "healthy",
          "llm_service": "healthy",
          "assessment_coordinator": "healthy"
        }
      }
    }
  ]
}