networks:
  test-network:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: leadfactory_test
    ports:
      - "5432:5432"
    networks:
      - test-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  stub-server:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test
    ports:
      - "5010:5010"
    environment:
      USE_STUBS: "true"
      PYTHONPATH: /app
      ENVIRONMENT: test
      SECRET_KEY: test-secret-key-for-ci
      CI: "true"
      DATABASE_URL: "sqlite:///tmp/stub.db"
    networks:
      - test-network
    command: python -m uvicorn stubs.server:app --host 0.0.0.0 --port 5010 --log-level info
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5010/health"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 20s

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test
    depends_on:
      postgres:
        condition: service_healthy
      stub-server:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/leadfactory_test
      USE_STUBS: "true"
      STUB_BASE_URL: http://stub-server:5010
      PYTHONPATH: /app
      ENVIRONMENT: test
      SECRET_KEY: test-secret-key-for-ci
      CI: "true"
      DOCKER_ENV: "true"
      # Ensure pytest can find modules
      PYTEST_CURRENT_TEST: "docker"
      # Disable Python buffering for real-time output
      PYTHONUNBUFFERED: "1"
      # Ensure test coverage writes to correct location
      COVERAGE_FILE: /app/coverage/.coverage
    networks:
      - test-network
    volumes:
      - ./coverage:/app/coverage
      - ./test-results:/app/test-results
      - ./.coveragerc:/app/.coveragerc:ro
    working_dir: /app
    command: scripts/run_docker_tests.sh