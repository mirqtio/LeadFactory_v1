services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: leadfactory_test
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  stub-server:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test
    ports:
      - "5010:5010"
    environment:
      USE_STUBS: "true"
      PYTHONPATH: /app
      ENVIRONMENT: test
      SECRET_KEY: test-secret-key-for-ci
      CI: "true"
    command: python -m uvicorn stubs.server:app --host 0.0.0.0 --port 5010
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5010/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
      target: test
    depends_on:
      postgres:
        condition: service_healthy
      stub-server:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/leadfactory_test
      USE_STUBS: "true"
      STUB_BASE_URL: http://stub-server:5010
      PYTHONPATH: /app
      ENVIRONMENT: test
      SECRET_KEY: test-secret-key-for-ci
      CI: "true"
    volumes:
      - ./coverage:/app/coverage
      - ./test-results:/app/test-results
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        python scripts/run_migrations.py &&
        echo 'Starting test execution...' &&
        pytest -m 'not slow and not phase_future' --tb=short --cov=. --cov-report=html:coverage/html --cov-report=term --cov-report=xml:coverage.xml --junitxml=junit.xml --cov-config=.coveragerc
      "