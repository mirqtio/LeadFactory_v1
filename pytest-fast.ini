[tool:pytest]
# Fast test configuration for CI performance optimization
# Runs only critical and smoke tests for <5 minute target

minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Performance optimizations
addopts = 
    -v
    --tb=short
    --strict-markers
    --strict-config
    -W ignore::DeprecationWarning
    -W ignore::PytestUnraisableExceptionWarning
    -W ignore::pytest.PytestCollectionWarning
    # Use parallel execution
    -n auto
    # Only run critical and smoke tests for fast feedback
    -m "critical or smoke"
    # Skip slow tests
    --ignore=tests/integration/test_full_pipeline_integration.py
    --ignore=tests/performance/
    --ignore=tests/stress/
    # Fail fast on first failure for rapid feedback
    -x

# Test markers for categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    smoke: marks tests as smoke tests for CI
    critical: marks tests as critical/priority tests
    flaky: marks tests as potentially flaky
    # Performance markers
    performance: marks tests as performance tests
    stress: marks tests as stress tests
    # Domain markers
    d0_gateway: Gateway/API integration tests
    d1_targeting: Targeting and filtering tests
    d2_sourcing: Data sourcing tests
    d3_assessment: Lead assessment tests
    d4_enrichment: Data enrichment tests
    d5_analytics: Analytics and reporting tests
    d6_reports: Report generation tests
    d7_storefront: Storefront/billing tests
    d8_personalization: Personalization tests
    d9_orchestration: Workflow orchestration tests
    d10_analytics: Advanced analytics tests
    d11_orchestration: Advanced orchestration tests
    # Infrastructure markers
    database: tests requiring database
    external_api: tests requiring external APIs
    auth: authentication/authorization tests

# Test discovery
python_paths = .

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings for fast feedback
timeout = 300  # 5 minute timeout per test
timeout_method = thread