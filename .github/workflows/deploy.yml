name: Deploy to VPS
on:
  push:
    branches: [ main ]          # ✅ GitHub 'push' trigger syntax
jobs:
  deploy:
    runs-on: ubuntu-latest      # ✅ Public runner
    steps:
      - uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          # Show fingerprint of the key we're using
          ssh-keygen -l -f ~/.ssh/deploy_key

      - name: Add VPS to known_hosts
        run: |
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Remote deploy
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=accept-new -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} <<'SSH'
            set -e
            # Clone or pull repository
            echo "Starting deployment..."
            if [ ! -d /srv/leadfactory ]; then
              sudo mkdir -p /srv/leadfactory && sudo chown $USER /srv/leadfactory
            fi
            cd /srv/leadfactory
            if [ -d .git ]; then
              git fetch --depth=1 origin main && git reset --hard origin/main
            else
              git clone --depth=1 https://github.com/mirqtio/LeadFactory_v1.git .
            fi
            docker compose -f docker-compose.prod.yml build
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
            
            # Wait for database to be ready
            echo "Waiting for database to be ready..."
            sleep 10
            
            # Ensure alembic is initialized
            echo "Initializing alembic if needed..."
            docker compose -f docker-compose.prod.yml run --rm -T web alembic stamp base || true
            
            # Run database migrations with reduced memory usage
            echo "Running database migrations..."
            # Use run instead of exec to avoid keeping the web container running
            docker compose -f docker-compose.prod.yml run --rm -T web alembic upgrade head
            
            # Verify deployment
            echo "Verifying deployment..."
            docker compose -f docker-compose.prod.yml ps
            curl -f http://localhost:8000/health || echo "Health check failed"
          SSH