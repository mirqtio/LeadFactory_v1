name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.11.0"
  DATABASE_URL: "sqlite:///tmp/test.db"
  USE_STUBS: "true"
  ENVIRONMENT: "test"
  SECRET_KEY: "test-secret-key-for-ci"
  CI: "true"

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Create tmp directory
      run: mkdir -p tmp
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
    
    - name: Run minimal tests
      run: |
        python -m pytest tests/unit/test_core.py tests/unit/test_health_endpoint.py -xvs
    
    - name: Run additional stable tests
      run: |
        # These tests have been verified to pass consistently
        python -m pytest \
          tests/unit/test_core.py \
          tests/unit/test_health_endpoint.py \
          tests/unit/test_unit_models.py \
          tests/smoke/test_health.py \
          tests/integration/test_stub_server.py \
          tests/unit/d6_reports/test_d6_reports_models.py \
          tests/unit/d8_personalization/test_d8_personalization_models.py \
          tests/unit/d1_targeting/test_d1_models.py \
          -xvs
    
    - name: Generate coverage report
      continue-on-error: true
      run: |
        # Run tests with coverage but don't enforce threshold yet
        python -m pytest \
          tests/unit/test_core.py \
          tests/unit/test_health_endpoint.py \
          tests/unit/test_unit_models.py \
          tests/smoke/test_health.py \
          tests/integration/test_stub_server.py \
          tests/unit/d6_reports/test_d6_reports_models.py \
          tests/unit/d8_personalization/test_d8_personalization_models.py \
          tests/unit/d1_targeting/test_d1_models.py \
          --cov=. \
          --cov-report=term \
          --cov-report=xml
