name: Fast CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  fast-test:
    name: Ultra-Fast Test Suite (<5 min target)
    runs-on: ubuntu-latest
    timeout-minutes: 4  # Stricter 4-minute timeout for buffer
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build test image (optimized)
      run: |
        # Use build cache and parallel builds for speed
        docker build -f Dockerfile.test -t leadfactory-test . --cache-from=leadfactory-test --build-arg BUILDKIT_INLINE_CACHE=1
    
    - name: Start minimal services
      run: |
        # Start only postgres, skip stub-server for speed
        docker compose -f docker-compose.test.yml up -d postgres
        
        # Quick PostgreSQL check with aggressive timeout
        echo "Quick PostgreSQL check..."
        timeout 20 bash -c 'until docker compose -f docker-compose.test.yml exec -T postgres pg_isready -U postgres; do sleep 0.5; done' || {
          echo "PostgreSQL failed to start quickly"
          exit 1
        }
        echo "âœ… Minimal service startup complete"
    
    - name: Run ultra-fast test suite
      run: |
        echo "ðŸš€ Starting ultra-fast test suite - strict <4 minutes"
        
        # Run only core unit tests for maximum speed
        # Skip smoke tests that might require external services
        # Use parallel execution for speed but limit workers
        timeout 180 docker compose -f docker-compose.test.yml run --rm test \
          python -m pytest \
          --tb=no \
          -q \
          -n 2 \
          --maxfail=1 \
          --disable-warnings \
          tests/unit/core/ \
          -x || {
          
          echo "::error::Ultra-fast test suite failed or exceeded 3-minute limit"
          exit 1
        }
        
        echo "âœ… Ultra-fast test suite completed successfully"
    
    - name: Performance verification
      run: |
        echo "âœ… Fast CI Pipeline completed within 5-minute target"
        echo "This workflow focuses on critical path validation for rapid feedback"
        echo "Full test coverage is handled by the comprehensive CI Pipeline"