name: Minimal Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: "3.11.0"
  DATABASE_URL: "sqlite:///tmp/test.db"
  USE_STUBS: "true"
  ENVIRONMENT: "test"
  SECRET_KEY: "test-secret-key-for-ci"

jobs:
  test-minimal:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Create tmp directory
      run: mkdir -p tmp
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc postgresql-client
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install core dependencies only
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-timeout pytest-mock python-json-logger
    
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
    
    - name: Debug environment
      run: |
        echo "Python version:"
        python --version
        echo "Installed packages:"
        pip list | grep -E "(fastapi|uvicorn|pydantic|requests)"
        echo "Current directory:"
        pwd
        echo "PYTHONPATH: $PYTHONPATH"
        
    - name: Start stub server
      run: |
        # Start the stub server in the background with more logging
        echo "Starting stub server..."
        python -m uvicorn stubs.server:app --host 127.0.0.1 --port 5010 --log-level info &
        # Save the PID so we can kill it later
        echo $! > stub_server.pid
        # Give it a moment to start
        sleep 2
        # Check if process is still running
        if ! kill -0 $(cat stub_server.pid) 2>/dev/null; then
          echo "Stub server process died immediately!"
          exit 1
        fi
        # Wait for stub server to be ready
        echo "Waiting for stub server to be ready..."
        for i in {1..30}; do
          if curl -s http://localhost:5010/health > /dev/null; then
            echo "Stub server is ready!"
            curl -s http://localhost:5010/health | jq .
            break
          fi
          if [ $i -eq 30 ]; then
            echo "Stub server failed to start after 30 attempts!"
            echo "Checking if process is still running..."
            ps aux | grep uvicorn || true
            exit 1
          fi
          echo "Attempt $i/30: Waiting for stub server..."
          sleep 1
        done
    
    - name: Run CI smoke test
      run: |
        python -m pytest -xvs tests/test_ci_smoke.py --timeout=10 || true
    
    - name: Run core unit tests
      run: |
        python -m pytest -xvs tests/unit/test_core.py --timeout=30 || true
    
    - name: Run model tests
      run: |
        python -m pytest -xvs tests/unit/test_unit_models.py --timeout=30 || true
    
    - name: Run integration tests  
      run: |
        python -m pytest -xvs tests/integration/test_stub_server.py --timeout=60 || true
    
    - name: Check test results
      run: |
        # Run all tests again to get proper exit code
        python -m pytest tests/test_ci_smoke.py tests/unit/test_core.py tests/unit/test_unit_models.py tests/integration/test_stub_server.py --tb=short
    
    - name: Stop stub server
      if: always()
      run: |
        if [ -f stub_server.pid ]; then
          kill $(cat stub_server.pid) || true
        fi