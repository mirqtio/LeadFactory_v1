[tool:pytest]
# Ultra-fast test configuration for <3 minute CI target
# Optimized for maximum speed by skipping expensive setup

minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Ultra-performance optimizations
addopts = 
    --tb=no
    -q
    --strict-markers
    --disable-warnings
    -p no:warnings
    # Use minimal parallel execution to avoid overhead
    -n 2
    # Only run ultra-fast unit tests
    -m "unit and (minimal or no_stubs or critical)"
    # Skip ALL slow directories and files
    --ignore=tests/integration/
    --ignore=tests/e2e/
    --ignore=tests/performance/
    --ignore=tests/smoke/
    --ignore=tests/comprehensive/
    --ignore=tests/security/
    # Skip specific slow unit tests
    --ignore=tests/unit/core/test_config.py
    --ignore=tests/unit/d0_gateway/
    --ignore=tests/unit/d3_assessment/
    --ignore=tests/unit/d6_reports/
    --ignore=tests/unit/d7_storefront/
    --ignore=tests/unit/d9_delivery/
    # Fail immediately on first failure
    -x
    # Skip collection warnings for speed
    --ignore-glob="**/test_*_integration.py"

# Essential markers only
markers =
    unit: marks tests as unit tests
    minimal: marks tests that run without infrastructure
    no_stubs: marks tests that don't require stub server
    critical: marks tests as critical/priority tests
    slow: marks tests as slow (excluded)

# Test discovery
python_paths = .

# Minimal logging for speed
log_cli = false

# Aggressive timeout for ultra-fast feedback
timeout = 180  # 3 minute timeout total
timeout_method = signal