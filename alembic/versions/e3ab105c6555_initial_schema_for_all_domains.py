"""Initial schema for all domains

Revision ID: e3ab105c6555
Revises:
Create Date: 2025-06-07 22:44:22.476775

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e3ab105c6555'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('businesses',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('yelp_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=500), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('zip_code', sa.String(length=10), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('vertical', sa.String(length=50), nullable=True),
    sa.Column('categories', sa.JSON(), nullable=True),
    sa.Column('place_id', sa.String(length=100), nullable=True),
    sa.Column('rating', sa.DECIMAL(precision=2, scale=1), nullable=True),
    sa.Column('user_ratings_total', sa.Integer(), nullable=True),
    sa.Column('price_level', sa.Integer(), nullable=True),
    sa.Column('opening_hours', sa.JSON(), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('business_status', sa.String(length=20), nullable=True),
    sa.Column('raw_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('yelp_id')
    )
    op.create_index('idx_business_created', 'businesses', ['created_at'], unique=False)
    op.create_index('idx_business_vertical_city', 'businesses', ['vertical', 'city'], unique=False)
    op.create_table('email_suppressions',
    sa.Column('email_hash', sa.String(length=64), nullable=False),
    sa.Column('reason', sa.String(length=100), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('email_hash')
    )
    op.create_table('experiments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'PAUSED', 'COMPLETED', name='experimentstatus'), nullable=True),
    sa.Column('hypothesis', sa.Text(), nullable=True),
    sa.Column('success_metrics', sa.JSON(), nullable=True),
    sa.Column('variants', sa.JSON(), nullable=False),
    sa.Column('started_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('ended_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('gateway_rate_limits',
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('daily_limit', sa.Integer(), nullable=False),
    sa.Column('daily_used', sa.Integer(), nullable=True),
    sa.Column('burst_limit', sa.Integer(), nullable=False),
    sa.Column('reset_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('provider')
    )
    op.create_table('gateway_usage',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('provider', sa.String(length=50), nullable=False),
    sa.Column('endpoint', sa.String(length=100), nullable=False),
    sa.Column('cost_usd', sa.DECIMAL(precision=10, scale=6), nullable=True),
    sa.Column('cache_hit', sa.Boolean(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_gateway_usage_provider_created', 'gateway_usage', ['provider', 'created_at'], unique=False)
    op.create_table('pipeline_runs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('flow_name', sa.String(length=100), nullable=False),
    sa.Column('flow_run_id', sa.String(length=100), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('total_businesses', sa.Integer(), nullable=True),
    sa.Column('total_assessed', sa.Integer(), nullable=True),
    sa.Column('total_qualified', sa.Integer(), nullable=True),
    sa.Column('total_emails_sent', sa.Integer(), nullable=True),
    sa.Column('total_purchases', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('flow_run_id')
    )
    op.create_index('idx_pipeline_run_created', 'pipeline_runs', ['created_at'], unique=False)
    op.create_table('targets',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('geo_type', sa.Enum('ZIP', 'CITY', 'METRO', 'STATE', name='geotype'), nullable=False),
    sa.Column('geo_value', sa.String(length=100), nullable=False),
    sa.Column('vertical', sa.String(length=50), nullable=False),
    sa.Column('estimated_businesses', sa.Integer(), nullable=True),
    sa.Column('priority_score', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint('priority_score >= 0 AND priority_score <= 1'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('geo_type', 'geo_value', 'vertical')
    )
    op.create_table('webhook_events',
    sa.Column('id', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('processed_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_results',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('business_id', sa.String(), nullable=True),
    sa.Column('assessment_type', sa.String(length=50), nullable=False),
    sa.Column('performance_score', sa.Integer(), nullable=True),
    sa.Column('seo_score', sa.Integer(), nullable=True),
    sa.Column('accessibility_score', sa.Integer(), nullable=True),
    sa.Column('best_practices_score', sa.Integer(), nullable=True),
    sa.Column('lcp_ms', sa.Integer(), nullable=True),
    sa.Column('fid_ms', sa.Integer(), nullable=True),
    sa.Column('cls', sa.DECIMAL(precision=5, scale=3), nullable=True),
    sa.Column('issues_json', sa.JSON(), nullable=True),
    sa.Column('recommendations_json', sa.JSON(), nullable=True),
    sa.Column('cost_usd', sa.DECIMAL(precision=10, scale=6), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_assessment_business_type', 'assessment_results', ['business_id', 'assessment_type'], unique=False)
    op.create_table('batches',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('target_id', sa.String(), nullable=True),
    sa.Column('batch_date', sa.Date(), nullable=False),
    sa.Column('planned_size', sa.Integer(), nullable=False),
    sa.Column('actual_size', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'COMPLETED', 'FAILED', name='batchstatus'), nullable=True),
    sa.Column('started_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['target_id'], ['targets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('target_id', 'batch_date')
    )
    op.create_index('idx_batch_date_status', 'batches', ['batch_date', 'status'], unique=False)
    op.create_table('emails',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('business_id', sa.String(), nullable=True),
    sa.Column('subject', sa.String(length=500), nullable=False),
    sa.Column('preview_text', sa.String(length=200), nullable=True),
    sa.Column('html_body', sa.Text(), nullable=False),
    sa.Column('text_body', sa.Text(), nullable=True),
    sa.Column('sendgrid_message_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'DELIVERED', 'OPENED', 'CLICKED', 'BOUNCED', 'COMPLAINED', 'UNSUBSCRIBED', name='emailstatus'), nullable=True),
    sa.Column('sent_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('delivered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('opened_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('clicked_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('bounced_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('unsubscribed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('complained_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('bounce_reason', sa.Text(), nullable=True),
    sa.Column('spam_score', sa.DECIMAL(precision=3, scale=1), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_business_created', 'emails', ['business_id', 'created_at'], unique=False)
    op.create_index('idx_email_status', 'emails', ['status'], unique=False)
    op.create_table('experiment_assignments',
    sa.Column('experiment_id', sa.String(), nullable=False),
    sa.Column('business_id', sa.String(), nullable=False),
    sa.Column('variant', sa.String(length=50), nullable=False),
    sa.Column('assigned_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiments.id'], ),
    sa.PrimaryKeyConstraint('experiment_id', 'business_id')
    )
    op.create_table('purchases',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('business_id', sa.String(), nullable=True),
    sa.Column('stripe_session_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('amount_cents', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('customer_email', sa.String(length=255), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('campaign', sa.String(length=100), nullable=True),
    sa.Column('attribution_metadata', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'COMPLETED', 'REFUNDED', 'FAILED', name='purchasestatus'), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('refunded_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_session_id')
    )
    op.create_index('idx_purchase_status_created', 'purchases', ['status', 'created_at'], unique=False)
    op.create_table('scoring_results',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('business_id', sa.String(), nullable=True),
    sa.Column('score_raw', sa.DECIMAL(precision=5, scale=4), nullable=True),
    sa.Column('score_pct', sa.Integer(), nullable=True),
    sa.Column('tier', sa.String(length=1), nullable=True),
    sa.Column('confidence', sa.DECIMAL(precision=3, scale=2), nullable=True),
    sa.Column('scoring_version', sa.Integer(), nullable=True),
    sa.Column('score_breakdown', sa.JSON(), nullable=True),
    sa.Column('passed_gate', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("tier IN ('A', 'B', 'C', 'D')"),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_scoring_business_created', 'scoring_results', ['business_id', 'created_at'], unique=False)
    op.create_index('idx_scoring_tier_created', 'scoring_results', ['tier', 'created_at'], unique=False)
    op.create_table('email_clicks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('email_id', sa.String(), nullable=True),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('clicked_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['email_id'], ['emails.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('email_clicks')
    op.drop_index('idx_scoring_tier_created', table_name='scoring_results')
    op.drop_index('idx_scoring_business_created', table_name='scoring_results')
    op.drop_table('scoring_results')
    op.drop_index('idx_purchase_status_created', table_name='purchases')
    op.drop_table('purchases')
    op.drop_table('experiment_assignments')
    op.drop_index('idx_email_status', table_name='emails')
    op.drop_index('idx_email_business_created', table_name='emails')
    op.drop_table('emails')
    op.drop_index('idx_batch_date_status', table_name='batches')
    op.drop_table('batches')
    op.drop_index('idx_assessment_business_type', table_name='assessment_results')
    op.drop_table('assessment_results')
    op.drop_table('webhook_events')
    op.drop_table('targets')
    op.drop_index('idx_pipeline_run_created', table_name='pipeline_runs')
    op.drop_table('pipeline_runs')
    op.drop_index('idx_gateway_usage_provider_created', table_name='gateway_usage')
    op.drop_table('gateway_usage')
    op.drop_table('gateway_rate_limits')
    op.drop_table('experiments')
    op.drop_table('email_suppressions')
    op.drop_index('idx_business_vertical_city', table_name='businesses')
    op.drop_index('idx_business_created', table_name='businesses')
    op.drop_table('businesses')
    # ### end Alembic commands ###
